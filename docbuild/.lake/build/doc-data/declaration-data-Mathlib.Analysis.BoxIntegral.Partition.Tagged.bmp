{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion_filter_le\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">distortion_filter_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.filter\">filter</a></span> <span class=\"fn\">p</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion\">distortion</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion\">distortion</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion_filter_le","kind":"theorem","line":391,"name":"BoxIntegral.TaggedPrepartition.distortion_filter_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L391-L392"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion_single\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">distortion_single</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ</span> : <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.single\">single</a> <span class=\"fn\">I</span> <span class=\"fn\">J</span> <span class=\"fn\">hJ</span> <span class=\"fn\">x</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion\">distortion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\">distortion</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion_single","kind":"theorem","line":386,"name":"BoxIntegral.TaggedPrepartition.distortion_single","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L386-L389"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion_of_const\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">distortion_of_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.boxes\">boxes</a></span>.<a href=\"./Mathlib/Data/Finset/Empty.html#Finset.Nonempty\">Nonempty</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">∀ <span class=\"fn\">J</span> ∈ <span class=\"fn\">π</span>, <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\">distortion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion\">distortion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion_of_const","kind":"theorem","line":382,"name":"BoxIntegral.TaggedPrepartition.distortion_of_const","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L382-L384"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion_disjUnion\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">distortion_disjUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π₁ </span><span class=\"fn\">π₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.disjUnion\">disjUnion</a></span> <span class=\"fn\">π₂</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion\">distortion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion\">distortion</a></span> <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion\">distortion</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion_disjUnion","kind":"theorem","line":377,"name":"BoxIntegral.TaggedPrepartition.distortion_disjUnion","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L377-L380"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion_biUnionPrepartition\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">distortion_biUnionPrepartition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">πi</span> : <span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">J</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.biUnionPrepartition\">biUnionPrepartition</a></span> <span class=\"fn\">πi</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion\">distortion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.boxes\">boxes</a></span>.<a href=\"./Mathlib/Data/Finset/Lattice/Fold.html#Finset.sup\">sup</a></span> <span class=\"fn\">fun (<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">πi</span> <span class=\"fn\">J</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.distortion\">distortion</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion_biUnionPrepartition","kind":"theorem","line":372,"name":"BoxIntegral.TaggedPrepartition.distortion_biUnionPrepartition","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L372-L375"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.distortion_biUnionTagged\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Prepartition</span>.<span class=\"name\">distortion_biUnionTagged</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">πi</span> : <span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">J</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.biUnionTagged\">biUnionTagged</a></span> <span class=\"fn\">πi</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion\">distortion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.boxes\">boxes</a></span>.<a href=\"./Mathlib/Data/Finset/Lattice/Fold.html#Finset.sup\">sup</a></span> <span class=\"fn\">fun (<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">πi</span> <span class=\"fn\">J</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion\">distortion</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.distortion_biUnionTagged","kind":"theorem","line":366,"name":"BoxIntegral.Prepartition.distortion_biUnionTagged","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L366-L370"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion_le_iff\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">distortion_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion\">distortion</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">J</span> ∈ <span class=\"fn\">π</span>, <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\">distortion</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion_le_iff","kind":"theorem","line":363,"name":"BoxIntegral.TaggedPrepartition.distortion_le_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L363-L364"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion_le_of_mem\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">distortion_le_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">π</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\">distortion</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion\">distortion</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion_le_of_mem","kind":"theorem","line":360,"name":"BoxIntegral.TaggedPrepartition.distortion_le_of_mem","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L360-L361"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">distortion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a></div></div>","info":{"doc":"The distortion of a tagged prepartition is the maximum of distortions of its boxes. ","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.distortion","kind":"def","line":356,"name":"BoxIntegral.TaggedPrepartition.distortion","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L356-L358"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.embedBox\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">embedBox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding\">↪</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">J</span></span></div></div>","info":{"doc":"If `I ≤ J`, then every tagged prepartition of `I` is a tagged prepartition of `J`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.embedBox","kind":"def","line":340,"name":"BoxIntegral.TaggedPrepartition.embedBox","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L340-L348"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsHenstock.disjUnion\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">IsHenstock</span>.<span class=\"name\">disjUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π₁ </span><span class=\"fn\">π₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsHenstock\">IsHenstock</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsHenstock\">IsHenstock</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.disjUnion\">disjUnion</a></span> <span class=\"fn\">π₂</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsHenstock\">IsHenstock</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsHenstock.disjUnion","kind":"theorem","line":331,"name":"BoxIntegral.TaggedPrepartition.IsHenstock.disjUnion","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L331-L338"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate.disjUnion\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">IsSubordinate</span>.<span class=\"name\">disjUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π₁ </span><span class=\"fn\">π₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate\">IsSubordinate</a></span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate\">IsSubordinate</a></span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.disjUnion\">disjUnion</a></span> <span class=\"fn\">π₂</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate\">IsSubordinate</a></span> <span class=\"fn\">r</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate.disjUnion","kind":"theorem","line":322,"name":"BoxIntegral.TaggedPrepartition.IsSubordinate.disjUnion","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L322-L329"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.disjUnion_tag_of_mem_right\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">disjUnion_tag_of_mem_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π₁ </span><span class=\"fn\">π₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ</span> : <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">π₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.disjUnion\">disjUnion</a></span> <span class=\"fn\">π₂</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <span class=\"fn\">J</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.disjUnion_tag_of_mem_right","kind":"theorem","line":318,"name":"BoxIntegral.TaggedPrepartition.disjUnion_tag_of_mem_right","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L318-L320"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.disjUnion_tag_of_mem_left\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">disjUnion_tag_of_mem_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π₁ </span><span class=\"fn\">π₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ</span> : <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">π₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.disjUnion\">disjUnion</a></span> <span class=\"fn\">π₂</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <span class=\"fn\">J</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.disjUnion_tag_of_mem_left","kind":"theorem","line":314,"name":"BoxIntegral.TaggedPrepartition.disjUnion_tag_of_mem_left","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L314-L316"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion_disjUnion\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">iUnion_disjUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π₁ </span><span class=\"fn\">π₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.disjUnion\">disjUnion</a></span> <span class=\"fn\">π₂</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion_disjUnion","kind":"theorem","line":309,"name":"BoxIntegral.TaggedPrepartition.iUnion_disjUnion","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L309-L312"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mem_disjUnion\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">mem_disjUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π₁ </span><span class=\"fn\">π₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.disjUnion\">disjUnion</a></span> <span class=\"fn\">π₂</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">π₁</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">π₂</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mem_disjUnion","kind":"theorem","line":304,"name":"BoxIntegral.TaggedPrepartition.mem_disjUnion","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L304-L307"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.disjUnion_boxes\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">disjUnion_boxes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π₁ </span><span class=\"fn\">π₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.disjUnion\">disjUnion</a></span> <span class=\"fn\">π₂</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.boxes\">boxes</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.boxes\">boxes</a></span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.boxes\">boxes</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.disjUnion_boxes","kind":"theorem","line":300,"name":"BoxIntegral.TaggedPrepartition.disjUnion_boxes","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L300-L302"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.disjUnion\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">disjUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π₁ </span><span class=\"fn\">π₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span></div></div>","info":{"doc":"Union of two tagged prepartitions with disjoint unions of boxes. ","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.disjUnion","kind":"def","line":289,"name":"BoxIntegral.TaggedPrepartition.disjUnion","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L289-L297"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion_single\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">iUnion_single</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ</span> : <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.single\">single</a> <span class=\"fn\">I</span> <span class=\"fn\">J</span> <span class=\"fn\">hJ</span> <span class=\"fn\">x</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">J</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion_single","kind":"theorem","line":284,"name":"BoxIntegral.TaggedPrepartition.iUnion_single","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L284-L286"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.isSubordinate_single\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">isSubordinate_single</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ</span> : <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.single\">single</a> <span class=\"fn\">I</span> <span class=\"fn\">J</span> <span class=\"fn\">hJ</span> <span class=\"fn\">x</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate\">IsSubordinate</a></span> <span class=\"fn\">r</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">x</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">r</span> <span class=\"fn\">x</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.isSubordinate_single","kind":"theorem","line":279,"name":"BoxIntegral.TaggedPrepartition.isSubordinate_single","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L279-L282"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.isHenstock_single\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">isHenstock_single</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.single\">single</a> <span class=\"fn\">I</span> <span class=\"fn\">I</span> <span class=\"fn\">⋯</span> <span class=\"fn\">x</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsHenstock\">IsHenstock</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.isHenstock_single","kind":"theorem","line":276,"name":"BoxIntegral.TaggedPrepartition.isHenstock_single","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L276-L277"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.isHenstock_single_iff\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">isHenstock_single_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ</span> : <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.single\">single</a> <span class=\"fn\">I</span> <span class=\"fn\">J</span> <span class=\"fn\">hJ</span> <span class=\"fn\">x</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsHenstock\">IsHenstock</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">J</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.isHenstock_single_iff","kind":"theorem","line":271,"name":"BoxIntegral.TaggedPrepartition.isHenstock_single_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L271-L274"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.forall_mem_single\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">forall_mem_single</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ</span> : <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∀ <span class=\"fn\">J'</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.single\">single</a> <span class=\"fn\">I</span> <span class=\"fn\">J</span> <span class=\"fn\">hJ</span> <span class=\"fn\">x</span> <span class=\"fn\">h</span></span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.single\">single</a> <span class=\"fn\">I</span> <span class=\"fn\">J</span> <span class=\"fn\">hJ</span> <span class=\"fn\">x</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <span class=\"fn\">J'</span>)</span> <span class=\"fn\">J'</span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span> <span class=\"fn\">J</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.forall_mem_single","kind":"theorem","line":268,"name":"BoxIntegral.TaggedPrepartition.forall_mem_single","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L268-L269"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.isPartition_single\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">isPartition_single</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.single\">single</a> <span class=\"fn\">I</span> <span class=\"fn\">I</span> <span class=\"fn\">⋯</span> <span class=\"fn\">x</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition\">IsPartition</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.isPartition_single","kind":"theorem","line":265,"name":"BoxIntegral.TaggedPrepartition.isPartition_single","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L265-L266"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.isPartition_single_iff\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">isPartition_single_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ</span> : <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.single\">single</a> <span class=\"fn\">I</span> <span class=\"fn\">J</span> <span class=\"fn\">hJ</span> <span class=\"fn\">x</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition\">IsPartition</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">I</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.isPartition_single_iff","kind":"theorem","line":261,"name":"BoxIntegral.TaggedPrepartition.isPartition_single_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L261-L263"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.instInhabited\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.instInhabited","kind":"instance","line":258,"name":"BoxIntegral.TaggedPrepartition.instInhabited","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L258-L259"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mem_single\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">mem_single</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J'</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ</span> : <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">J'</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.single\">single</a> <span class=\"fn\">I</span> <span class=\"fn\">J</span> <span class=\"fn\">hJ</span> <span class=\"fn\">x</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">J'</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">J</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mem_single","kind":"theorem","line":254,"name":"BoxIntegral.TaggedPrepartition.mem_single","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L254-L256"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.single_tag\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">single_tag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ</span> : <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.single\">single</a> <span class=\"fn\">I</span> <span class=\"fn\">J</span> <span class=\"fn\">hJ</span> <span class=\"fn\">x</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">x_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) =&gt; <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.single_tag","kind":"theorem","line":250,"name":"BoxIntegral.TaggedPrepartition.single_tag","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L250-L250"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.single_boxes_val\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">single_boxes_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ</span> : <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.single\">single</a> <span class=\"fn\">I</span> <span class=\"fn\">J</span> <span class=\"fn\">hJ</span> <span class=\"fn\">x</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.boxes\">boxes</a></span>.<a href=\"./Mathlib/Data/Finset/Defs.html#Finset.val\">val</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">J</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.single_boxes_val","kind":"theorem","line":250,"name":"BoxIntegral.TaggedPrepartition.single_boxes_val","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L250-L250"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.single\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">single</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ</span> : <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span></div></div>","info":{"doc":"Tagged prepartition with single box and prescribed tag. ","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.single","kind":"def","line":249,"name":"BoxIntegral.TaggedPrepartition.single","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L249-L252"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate.diam_le\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">IsSubordinate</span>.<span class=\"name\">diam_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate\">IsSubordinate</a></span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ</span> : <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.boxes\">boxes</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Bounded.html#Metric.diam\">Metric.diam</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">J</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <span class=\"fn\">J</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate.diam_le","kind":"theorem","line":242,"name":"BoxIntegral.TaggedPrepartition.IsSubordinate.diam_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L242-L247"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate.mono\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">IsSubordinate</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r₁ </span><span class=\"fn\">r₂</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate\">IsSubordinate</a></span> <span class=\"fn\">r₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\">r₁</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">r₂</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate\">IsSubordinate</a></span> <span class=\"fn\">r₂</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate.mono","kind":"theorem","line":238,"name":"BoxIntegral.TaggedPrepartition.IsSubordinate.mono","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L238-L240"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate.mono'\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">IsSubordinate</span>.<span class=\"name\">mono'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r₁ </span><span class=\"fn\">r₂</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate\">IsSubordinate</a></span> <span class=\"fn\">r₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ <span class=\"fn\">J</span> ∈ <span class=\"fn\">π</span>, <span class=\"fn\"><span class=\"fn\">r₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <span class=\"fn\">J</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">r₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <span class=\"fn\">J</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate\">IsSubordinate</a></span> <span class=\"fn\">r₂</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate.mono'","kind":"theorem","line":234,"name":"BoxIntegral.TaggedPrepartition.IsSubordinate.mono'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L234-L236"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate.infPrepartition\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">IsSubordinate</span>.<span class=\"name\">infPrepartition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate\">IsSubordinate</a></span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π'</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.infPrepartition\">infPrepartition</a></span> <span class=\"fn\">π'</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate\">IsSubordinate</a></span> <span class=\"fn\">r</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate.infPrepartition","kind":"theorem","line":230,"name":"BoxIntegral.TaggedPrepartition.IsSubordinate.infPrepartition","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L230-L232"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate.biUnionPrepartition\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">IsSubordinate</span>.<span class=\"name\">biUnionPrepartition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate\">IsSubordinate</a></span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">πi</span> : <span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">J</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.biUnionPrepartition\">biUnionPrepartition</a></span> <span class=\"fn\">πi</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate\">IsSubordinate</a></span> <span class=\"fn\">r</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate.biUnionPrepartition","kind":"theorem","line":225,"name":"BoxIntegral.TaggedPrepartition.IsSubordinate.biUnionPrepartition","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L225-L228"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.isSubordinate_biUnionTagged\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">isSubordinate_biUnionTagged</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">πi</span> : <span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">J</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.biUnionTagged\">biUnionTagged</a></span> <span class=\"fn\">πi</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate\">IsSubordinate</a></span> <span class=\"fn\">r</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">J</span> ∈ <span class=\"fn\">π</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">πi</span> <span class=\"fn\">J</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate\">IsSubordinate</a></span> <span class=\"fn\">r</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.isSubordinate_biUnionTagged","kind":"theorem","line":219,"name":"BoxIntegral.TaggedPrepartition.isSubordinate_biUnionTagged","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L219-L223"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">IsSubordinate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"A tagged partition `π` is subordinate to `r : (ι → ℝ) → ℝ` if each box `J ∈ π` is included in\nthe closed ball with center `π.tag J` and radius `r (π.tag J)`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsSubordinate","kind":"def","line":212,"name":"BoxIntegral.TaggedPrepartition.IsSubordinate","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L212-L215"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsHenstock.card_filter_tag_eq_le\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">IsHenstock</span>.<span class=\"name\">card_filter_tag_eq_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsHenstock\">IsHenstock</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">J</span> ∈ <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.boxes\">boxes</a></span> | <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span>}</span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">ι</span></span></div></div>","info":{"doc":"In a Henstock prepartition, there are at most `2 ^ Fintype.card ι` boxes with a given tag. ","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsHenstock.card_filter_tag_eq_le","kind":"theorem","line":201,"name":"BoxIntegral.TaggedPrepartition.IsHenstock.card_filter_tag_eq_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L201-L210"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.isHenstock_biUnionTagged\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">isHenstock_biUnionTagged</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">πi</span> : <span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">J</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.biUnionTagged\">biUnionTagged</a></span> <span class=\"fn\">πi</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsHenstock\">IsHenstock</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">J</span> ∈ <span class=\"fn\">π</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">πi</span> <span class=\"fn\">J</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsHenstock\">IsHenstock</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.isHenstock_biUnionTagged","kind":"theorem","line":196,"name":"BoxIntegral.TaggedPrepartition.isHenstock_biUnionTagged","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L196-L199"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsHenstock\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">IsHenstock</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"A tagged partition is said to be a Henstock partition if for each `J ∈ π`, the tag of `J`\nbelongs to `J.Icc`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsHenstock","kind":"def","line":191,"name":"BoxIntegral.TaggedPrepartition.IsHenstock","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L191-L194"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition.infPrepartition\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">IsPartition</span>.<span class=\"name\">infPrepartition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition\">IsPartition</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.IsPartition\">IsPartition</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.infPrepartition\">infPrepartition</a></span> <span class=\"fn\">π₂</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition\">IsPartition</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition.infPrepartition","kind":"theorem","line":185,"name":"BoxIntegral.TaggedPrepartition.IsPartition.infPrepartition","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L185-L187"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mem_infPrepartition_comm\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">mem_infPrepartition_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π₁ </span><span class=\"fn\">π₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.infPrepartition\">infPrepartition</a></span> <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.toPrepartition\">toPrepartition</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.infPrepartition\">infPrepartition</a></span> <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.toPrepartition\">toPrepartition</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mem_infPrepartition_comm","kind":"theorem","line":181,"name":"BoxIntegral.TaggedPrepartition.mem_infPrepartition_comm","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L181-L183"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.infPrepartition_toPrepartition\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">infPrepartition_toPrepartition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π'</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.infPrepartition\">infPrepartition</a></span> <span class=\"fn\">π'</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.toPrepartition\">toPrepartition</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.toPrepartition\">toPrepartition</a></span> ⊓ <span class=\"fn\">π'</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.infPrepartition_toPrepartition","kind":"theorem","line":177,"name":"BoxIntegral.TaggedPrepartition.infPrepartition_toPrepartition","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L177-L179"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.infPrepartition\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">infPrepartition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π'</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span></div></div>","info":{"doc":"Given two partitions `π₁` and `π₁`, one of them tagged and the other is not, returns the tagged\npartition with `toPrepartition = π₁.toPrepartition ⊓ π₂` and tags coming from `π₁`.\n\nNote that usually the result is not a Henstock partition. ","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.infPrepartition","kind":"def","line":170,"name":"BoxIntegral.TaggedPrepartition.infPrepartition","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L170-L175"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition.biUnionPrepartition\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">IsPartition</span>.<span class=\"name\">biUnionPrepartition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition\">IsPartition</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">πi</span> : <span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">J</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\">∀ <span class=\"fn\">J</span> ∈ <span class=\"fn\">π</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">πi</span> <span class=\"fn\">J</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.IsPartition\">IsPartition</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.biUnionPrepartition\">biUnionPrepartition</a></span> <span class=\"fn\">πi</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition\">IsPartition</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition.biUnionPrepartition","kind":"theorem","line":165,"name":"BoxIntegral.TaggedPrepartition.IsPartition.biUnionPrepartition","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L165-L168"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.biUnionPrepartition_tag\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">biUnionPrepartition_tag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">πi</span> : <span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">J</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.biUnionPrepartition\">biUnionPrepartition</a></span> <span class=\"fn\">πi</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.biUnionIndex\">biUnionIndex</a></span> <span class=\"fn\">πi</span> <span class=\"fn\">J</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.biUnionPrepartition_tag","kind":"theorem","line":158,"name":"BoxIntegral.TaggedPrepartition.biUnionPrepartition_tag","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L158-L158"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.biUnionPrepartition\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">biUnionPrepartition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">πi</span> : <span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">J</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span></div></div>","info":{"doc":"Given a tagged partition `π` of `I` and a (not tagged) partition `πi J hJ` of each `J ∈ π`,\nreturns the tagged partition of `I` into all the boxes of all `πi J hJ`. The tag of a box `J`\nis defined to be the `π.tag` of the box of the partition `π` that includes `J`.\n\nNote that usually the result is not a Henstock partition. ","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.biUnionPrepartition","kind":"def","line":153,"name":"BoxIntegral.TaggedPrepartition.biUnionPrepartition","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L153-L163"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.IsPartition.biUnionTagged\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Prepartition</span>.<span class=\"name\">IsPartition</span>.<span class=\"name\">biUnionTagged</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.IsPartition\">IsPartition</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">πi</span> : <span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">J</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\">∀ <span class=\"fn\">J</span> ∈ <span class=\"fn\">π</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">πi</span> <span class=\"fn\">J</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition\">IsPartition</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.biUnionTagged\">biUnionTagged</a></span> <span class=\"fn\">πi</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition\">IsPartition</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.IsPartition.biUnionTagged","kind":"theorem","line":142,"name":"BoxIntegral.Prepartition.IsPartition.biUnionTagged","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L142-L145"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.forall_biUnionTagged\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Prepartition</span>.<span class=\"name\">forall_biUnionTagged</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">πi</span> : <span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">J</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∀ <span class=\"fn\">J</span> ∈ <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.biUnionTagged\">biUnionTagged</a></span> <span class=\"fn\">πi</span></span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.biUnionTagged\">biUnionTagged</a></span> <span class=\"fn\">πi</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <span class=\"fn\">J</span>)</span> <span class=\"fn\">J</span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">J</span> ∈ <span class=\"fn\">π</span>, <span class=\"fn\">∀ <span class=\"fn\">J'</span> ∈ <span class=\"fn\"><span class=\"fn\">πi</span> <span class=\"fn\">J</span></span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">πi</span> <span class=\"fn\">J</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <span class=\"fn\">J'</span>)</span> <span class=\"fn\">J'</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.forall_biUnionTagged","kind":"theorem","line":131,"name":"BoxIntegral.Prepartition.forall_biUnionTagged","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L131-L140"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.iUnion_biUnionTagged\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Prepartition</span>.<span class=\"name\">iUnion_biUnionTagged</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">πi</span> : <span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">J</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.biUnionTagged\">biUnionTagged</a></span> <span class=\"fn\">πi</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⋃ <span class=\"fn\">J</span> ∈ <span class=\"fn\">π</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">πi</span> <span class=\"fn\">J</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.iUnion_biUnionTagged","kind":"theorem","line":126,"name":"BoxIntegral.Prepartition.iUnion_biUnionTagged","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L126-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.tag_biUnionTagged\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Prepartition</span>.<span class=\"name\">tag_biUnionTagged</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">πi</span> : <span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">J</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ</span> : <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">π</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J'</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ'</span> : <span class=\"fn\">J'</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">πi</span> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.biUnionTagged\">biUnionTagged</a></span> <span class=\"fn\">πi</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <span class=\"fn\">J'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">πi</span> <span class=\"fn\">J</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <span class=\"fn\">J'</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.tag_biUnionTagged","kind":"theorem","line":121,"name":"BoxIntegral.Prepartition.tag_biUnionTagged","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L121-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.mem_biUnionTagged\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Prepartition</span>.<span class=\"name\">mem_biUnionTagged</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">πi</span> : <span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">J</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.biUnionTagged\">biUnionTagged</a></span> <span class=\"fn\">πi</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">J'</span> ∈ <span class=\"fn\">π</span>, <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">πi</span> <span class=\"fn\">J'</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.mem_biUnionTagged","kind":"theorem","line":116,"name":"BoxIntegral.Prepartition.mem_biUnionTagged","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L116-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.biUnionTagged\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Prepartition</span>.<span class=\"name\">biUnionTagged</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">πi</span> : <span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">J</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span></div></div>","info":{"doc":"Given a partition `π` of `I : BoxIntegral.Box ι` and a collection of tagged partitions\n`πi J` of all boxes `J ∈ π`, returns the tagged partition of `I` into all the boxes of `πi J`\nwith tags coming from `(πi J).tag`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.biUnionTagged","kind":"def","line":107,"name":"BoxIntegral.Prepartition.biUnionTagged","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L107-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion_filter_not\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">iUnion_filter_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.filter\">filter</a></span> <span class=\"fn\">fun (<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) =&gt; <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">J</span></span></span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.filter\">filter</a></span> <span class=\"fn\">p</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion_filter_not","kind":"theorem","line":96,"name":"BoxIntegral.TaggedPrepartition.iUnion_filter_not","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L96-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mem_filter\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">mem_filter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.filter\">filter</a></span> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">π</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">J</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mem_filter","kind":"theorem","line":92,"name":"BoxIntegral.TaggedPrepartition.mem_filter","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L92-L94"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.filter_tag\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">filter_tag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.filter\">filter</a></span> <span class=\"fn\">p</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.filter_tag","kind":"theorem","line":88,"name":"BoxIntegral.TaggedPrepartition.filter_tag","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L88-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.filter_boxes_val\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">filter_boxes_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.filter\">filter</a></span> <span class=\"fn\">p</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.boxes\">boxes</a></span>.<a href=\"./Mathlib/Data/Finset/Defs.html#Finset.val\">val</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Filter.html#Multiset.filter\">Multiset.filter</a> <span class=\"fn\">(fun (<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.boxes\">boxes</a></span>.<a href=\"./Mathlib/Data/Finset/Defs.html#Finset.val\">val</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.filter_boxes_val","kind":"theorem","line":88,"name":"BoxIntegral.TaggedPrepartition.filter_boxes_val","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L88-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.filter\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">filter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span></div></div>","info":{"doc":"The tagged partition made of boxes of `π` that satisfy predicate `p`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.filter","kind":"def","line":87,"name":"BoxIntegral.TaggedPrepartition.filter","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L87-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.isPartition_iff_iUnion_eq\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">isPartition_iff_iUnion_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition\">IsPartition</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.isPartition_iff_iUnion_eq","kind":"theorem","line":84,"name":"BoxIntegral.TaggedPrepartition.isPartition_iff_iUnion_eq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L84-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">IsPartition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"A tagged prepartition is a partition if it covers the whole box. ","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition","kind":"def","line":80,"name":"BoxIntegral.TaggedPrepartition.IsPartition","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L80-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion_subset\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">iUnion_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion_subset","kind":"theorem","line":77,"name":"BoxIntegral.TaggedPrepartition.iUnion_subset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L77-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.subset_iUnion\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">subset_iUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">π</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.subset_iUnion","kind":"theorem","line":74,"name":"BoxIntegral.TaggedPrepartition.subset_iUnion","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L74-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mem_iUnion\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">mem_iUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">J</span> ∈ <span class=\"fn\">π</span>, <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">J</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mem_iUnion","kind":"theorem","line":69,"name":"BoxIntegral.TaggedPrepartition.mem_iUnion","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L69-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion_toPrepartition\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">iUnion_toPrepartition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.iUnion\">iUnion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion_toPrepartition","kind":"theorem","line":66,"name":"BoxIntegral.TaggedPrepartition.iUnion_toPrepartition","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L66-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion_mk\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">iUnion_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span> → <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mk\">{</a> <span class=\"fn\">toPrepartition</span> := <span class=\"fn\">π</span>, <span class=\"fn\">tag</span> := <span class=\"fn\">f</span>, <span class=\"fn\">tag_mem_Icc</span> := <span class=\"fn\">h</span> <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mk\">}</a>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.iUnion\">iUnion</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion_mk","kind":"theorem","line":63,"name":"BoxIntegral.TaggedPrepartition.iUnion_mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L63-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion_def\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">iUnion_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⋃ <span class=\"fn\">J</span> ∈ <span class=\"fn\">π</span>, <span class=\"fn\">↑<span class=\"fn\">J</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion_def","kind":"theorem","line":61,"name":"BoxIntegral.TaggedPrepartition.iUnion_def","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L61-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">iUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span></div></div>","info":{"doc":"Union of all boxes of a tagged prepartition. ","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion","kind":"def","line":57,"name":"BoxIntegral.TaggedPrepartition.iUnion","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L57-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mem_mk\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">mem_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span> → <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mk\">{</a> <span class=\"fn\">toPrepartition</span> := <span class=\"fn\">π</span>, <span class=\"fn\">tag</span> := <span class=\"fn\">f</span>, <span class=\"fn\">tag_mem_Icc</span> := <span class=\"fn\">h</span> <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mk\">}</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">π</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mem_mk","kind":"theorem","line":54,"name":"BoxIntegral.TaggedPrepartition.mem_mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L54-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mem_toPrepartition\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">mem_toPrepartition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.toPrepartition\">toPrepartition</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">π</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mem_toPrepartition","kind":"theorem","line":51,"name":"BoxIntegral.TaggedPrepartition.mem_toPrepartition","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L51-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.instMembershipBox\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">instMembershipBox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.instMembershipBox","kind":"instance","line":48,"name":"BoxIntegral.TaggedPrepartition.instMembershipBox","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L48-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag_mem_Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">tag_mem_Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span></div></div>","info":{"doc":"Each tagged point belongs to `I` ","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag_mem_Icc","kind":"theorem","line":42,"name":"BoxIntegral.TaggedPrepartition.tag_mem_Icc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">tag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span> → <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span></div></div>","info":{"doc":"Choice of tagged point of each box in this prepartition:\nwe extend this to a total function, on all boxes in `ι → ℝ`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag","kind":"def","line":40,"name":"BoxIntegral.TaggedPrepartition.tag","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mk\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toPrepartition</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tag</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span> → <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tag_mem_Icc</span> : <span class=\"fn\">∀ (<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>), <span class=\"fn\"><span class=\"fn\">tag</span> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.mk","kind":"ctor","line":37,"name":"BoxIntegral.TaggedPrepartition.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.toPrepartition\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span>.<span class=\"name\">toPrepartition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.toPrepartition","kind":"def","line":37,"name":"BoxIntegral.TaggedPrepartition.toPrepartition","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L37-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">TaggedPrepartition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">BoxIntegral.Prepartition</a> <span class=\"fn\">I</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>","info":{"doc":"A tagged prepartition is a prepartition enriched with a tagged point for each box of the\nprepartition. For simplicity we require that `tag` is defined for all boxes in `ι → ℝ` but\nwe will use only the values of `tag` on the boxes of the partition. ","docLink":"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition","kind":"structure","line":34,"name":"BoxIntegral.TaggedPrepartition","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Partition/Tagged.lean#L34-L42"}}],"imports":["Init","Mathlib.Analysis.BoxIntegral.Partition.Basic"],"instances":[{"className":"Membership","name":"BoxIntegral.TaggedPrepartition.instMembershipBox","typeNames":["BoxIntegral.Box","BoxIntegral.TaggedPrepartition"]},{"className":"Inhabited","name":"BoxIntegral.TaggedPrepartition.instInhabited","typeNames":["BoxIntegral.TaggedPrepartition"]}],"name":"Mathlib.Analysis.BoxIntegral.Partition.Tagged"}