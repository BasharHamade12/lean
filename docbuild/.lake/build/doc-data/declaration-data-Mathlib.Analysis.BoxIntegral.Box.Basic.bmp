{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.diam_Icc_le_of_distortion_le\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">diam_Icc_le_of_distortion_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\">distortion</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Bounded.html#Metric.diam\">Metric.diam</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\">i</span></span>)</div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.diam_Icc_le_of_distortion_le","kind":"theorem","line":471,"name":"BoxIntegral.Box.diam_Icc_le_of_distortion_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L471-L479"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.dist_le_distortion_mul\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">dist_le_distortion_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\">distortion</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\">i</span></span>)</div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.dist_le_distortion_mul","kind":"theorem","line":465,"name":"BoxIntegral.Box.dist_le_distortion_mul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L465-L469"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.nndist_le_distortion_mul\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">nndist_le_distortion_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#NNDist.nndist\">nndist</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\">distortion</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#NNDist.nndist\">nndist</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <span class=\"fn\">i</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.nndist_le_distortion_mul","kind":"theorem","line":455,"name":"BoxIntegral.Box.nndist_le_distortion_mul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L455-L463"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion_eq_of_sub_eq_div\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">distortion_eq_of_sub_eq_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\">i</span></span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\">distortion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\">distortion</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion_eq_of_sub_eq_div","kind":"theorem","line":442,"name":"BoxIntegral.Box.distortion_eq_of_sub_eq_div","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L442-L453"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">distortion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a></div></div>","info":{"doc":"The distortion of a box `I` is the maximum of the ratios of the lengths of its edges.\nIt is defined as the maximum of the ratios\n`nndist I.lower I.upper / nndist (I.lower i) (I.upper i)`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion","kind":"def","line":436,"name":"BoxIntegral.Box.distortion","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L436-L440"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.exists_seq_mono_tendsto\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">exists_seq_mono_tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">J</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>),\n  <span class=\"fn\">(∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">(<span class=\"fn\">J</span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Ioo\">Box.Ioo</a> <span class=\"fn\">I</span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> (<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">J</span></span>) <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span>)</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> (<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">J</span></span>) <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.exists_seq_mono_tendsto","kind":"theorem","line":420,"name":"BoxIntegral.Box.exists_seq_mono_tendsto","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L420-L430"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.iUnion_Ioo_of_tendsto\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">iUnion_Ioo_of_tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> (<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">J</span>) <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> (<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">J</span>) <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Ioo\">Box.Ioo</a> <span class=\"fn\">(<span class=\"fn\">J</span> <span class=\"fn\">n</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Ioo\">Box.Ioo</a> <span class=\"fn\">I</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.iUnion_Ioo_of_tendsto","kind":"theorem","line":404,"name":"BoxIntegral.Box.iUnion_Ioo_of_tendsto","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L404-L418"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Ioo_subset_Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">Ioo_subset_Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Ioo\">Box.Ioo</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Ioo_subset_Icc","kind":"theorem","line":401,"name":"BoxIntegral.Box.Ioo_subset_Icc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L401-L402"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Ioo_subset_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">Ioo_subset_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Ioo\">Box.Ioo</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Ioo_subset_coe","kind":"theorem","line":398,"name":"BoxIntegral.Box.Ioo_subset_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L398-L399"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Ioo\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">Ioo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span></div></div>","info":{"doc":"The interior of a box. ","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Ioo","kind":"def","line":392,"name":"BoxIntegral.Box.Ioo","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L392-L396"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.continuousOn_face_Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">continuousOn_face_Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Icc\">Set.Icc</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <span class=\"fn\">i</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth\">insertNth</a></span> <span class=\"fn\">x</span></span>) <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\">face</a></span> <span class=\"fn\">i</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.continuousOn_face_Icc","kind":"theorem","line":381,"name":"BoxIntegral.Box.continuousOn_face_Icc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L381-L385"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mapsTo_insertNth_face\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mapsTo_insertNth_face</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <span class=\"fn\">i</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth\">insertNth</a></span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\">face</a></span> <span class=\"fn\">i</span>)</span></span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mapsTo_insertNth_face","kind":"theorem","line":373,"name":"BoxIntegral.Box.mapsTo_insertNth_face","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L373-L379"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mapsTo_insertNth_face_Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mapsTo_insertNth_face_Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Icc\">Set.Icc</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <span class=\"fn\">i</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth\">insertNth</a></span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\">face</a></span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mapsTo_insertNth_face_Icc","kind":"theorem","line":368,"name":"BoxIntegral.Box.mapsTo_insertNth_face_Icc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L368-L371"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.monotone_face\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">monotone_face</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\">face</a></span> <span class=\"fn\">i</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.monotone_face","kind":"theorem","line":365,"name":"BoxIntegral.Box.monotone_face","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L365-L366"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face_mono\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">face_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\">face</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\">face</a></span> <span class=\"fn\">i</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face_mono","kind":"theorem","line":360,"name":"BoxIntegral.Box.face_mono","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L360-L363"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face_mk\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">face_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l </span><span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>), <span class=\"fn\"><span class=\"fn\">l</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk\">{</a> <span class=\"fn\">lower</span> := <span class=\"fn\">l</span>, <span class=\"fn\">upper</span> := <span class=\"fn\">u</span>, <span class=\"fn\">lower_lt_upper</span> := <span class=\"fn\">h</span> <a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk\">}</a>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\">face</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk\">{</a> <span class=\"fn\">lower</span> := <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/Data/Fin/SuccPred.html#Fin.succAbove\">succAbove</a></span>, <span class=\"fn\">upper</span> := <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/Data/Fin/SuccPred.html#Fin.succAbove\">succAbove</a></span>, <span class=\"fn\">lower_lt_upper</span> := <span class=\"fn\">⋯</span> <a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face_mk","kind":"theorem","line":356,"name":"BoxIntegral.Box.face_mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L356-L358"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face_lower\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">face_lower</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\">face</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/Data/Fin/SuccPred.html#Fin.succAbove\">succAbove</a></span> <span class=\"fn\">a✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face_lower","kind":"theorem","line":352,"name":"BoxIntegral.Box.face_lower","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L352-L352"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face_upper\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">face_upper</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\">face</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/Data/Fin/SuccPred.html#Fin.succAbove\">succAbove</a></span> <span class=\"fn\">a✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face_upper","kind":"theorem","line":352,"name":"BoxIntegral.Box.face_upper","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L352-L352"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">face</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"Face of a box in `ℝⁿ⁺¹ = Fin (n + 1) → ℝ`: the box in `ℝⁿ = Fin n → ℝ` with corners at\n`I.lower ∘ Fin.succAbove i` and `I.upper ∘ Fin.succAbove i`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face","kind":"def","line":350,"name":"BoxIntegral.Box.face","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L350-L354"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.not_disjoint_coe_iff_nonempty_inter\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">not_disjoint_coe_iff_nonempty_inter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span> <span class=\"fn\">↑<span class=\"fn\">J</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">↑<span class=\"fn\">J</span></span>).<a href=\"./Mathlib/Data/Set/Defs.html#Set.Nonempty\">Nonempty</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.not_disjoint_coe_iff_nonempty_inter","kind":"theorem","line":341,"name":"BoxIntegral.Box.not_disjoint_coe_iff_nonempty_inter","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L341-L343"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.disjoint_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">disjoint_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span> <span class=\"fn\">↑<span class=\"fn\">J</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span> <span class=\"fn\">↑<span class=\"fn\">J</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.disjoint_coe","kind":"theorem","line":338,"name":"BoxIntegral.Box.disjoint_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L338-L339"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.disjoint_withBotCoe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">disjoint_withBotCoe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/TypeTags.html#WithBot\">WithBot</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span> <span class=\"fn\">↑<span class=\"fn\">J</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">I</span> <span class=\"fn\">J</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.disjoint_withBotCoe","kind":"theorem","line":332,"name":"BoxIntegral.Box.disjoint_withBotCoe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L332-L336"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instLatticeWithBot\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">instLatticeWithBot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/TypeTags.html#WithBot\">WithBot</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instLatticeWithBot","kind":"instance","line":320,"name":"BoxIntegral.Box.instLatticeWithBot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L320-L330"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_inf\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">coe_inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/TypeTags.html#WithBot\">WithBot</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">I</span> ⊓ <span class=\"fn\">J</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">↑<span class=\"fn\">J</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_inf","kind":"theorem","line":308,"name":"BoxIntegral.Box.coe_inf","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L308-L318"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.WithBot.inf\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">WithBot</span>.<span class=\"name\">inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/TypeTags.html#WithBot\">WithBot</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.WithBot.inf","kind":"instance","line":303,"name":"BoxIntegral.Box.WithBot.inf","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L303-L306"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_mk'\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">coe_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l </span><span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk'\">mk'</a> <span class=\"fn\">l</span> <span class=\"fn\">u</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Operations.html#Set.pi\">pi</a></span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">(<span class=\"fn\">l</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">u</span> <span class=\"fn\">i</span>)</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_mk'","kind":"theorem","line":295,"name":"BoxIntegral.Box.coe_mk'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L295-L301"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk'_eq_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mk'_eq_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk'\">mk'</a> <span class=\"fn\">l</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk'_eq_coe","kind":"theorem","line":287,"name":"BoxIntegral.Box.mk'_eq_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L287-L293"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk'_eq_bot\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mk'_eq_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk'\">mk'</a> <span class=\"fn\">l</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">l</span> <span class=\"fn\">i</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk'_eq_bot","kind":"theorem","line":282,"name":"BoxIntegral.Box.mk'_eq_bot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L282-L285"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk'\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l </span><span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/TypeTags.html#WithBot\">WithBot</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span>)</span></span></div></div>","info":{"doc":"Make a `WithBot (Box ι)` from a pair of corners `l u : ι → ℝ`. If `l i < u i` for all `i`,\nthen the result is `⟨l, u, _⟩ : Box ι`, otherwise it is `⊥`. In any case, the result interpreted\nas a set in `ι → ℝ` is the set `{x : ι → ℝ | ∀ i, x i ∈ Ioc (l i) (u i)}`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk'","kind":"def","line":276,"name":"BoxIntegral.Box.mk'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L276-L280"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.withBotCoe_inj\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">withBotCoe_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/TypeTags.html#WithBot\">WithBot</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">J</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.withBotCoe_inj","kind":"theorem","line":271,"name":"BoxIntegral.Box.withBotCoe_inj","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L271-L273"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.withBotCoe_subset_iff\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">withBotCoe_subset_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/TypeTags.html#WithBot\">WithBot</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.withBotCoe_subset_iff","kind":"theorem","line":265,"name":"BoxIntegral.Box.withBotCoe_subset_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L265-L269"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.biUnion_coe_eq_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">biUnion_coe_eq_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/TypeTags.html#WithBot\">WithBot</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⋃ (<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">↑<span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">I</span>), <span class=\"fn\">↑<span class=\"fn\">J</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.biUnion_coe_eq_coe","kind":"theorem","line":261,"name":"BoxIntegral.Box.biUnion_coe_eq_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L261-L263"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.isSome_iff\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">isSome_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/TypeTags.html#WithBot\">WithBot</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Option/Basic.html#Option.isSome\">Option.isSome</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/Data/Set/Defs.html#Set.Nonempty\">Nonempty</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.isSome_iff","kind":"theorem","line":253,"name":"BoxIntegral.Box.isSome_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L253-L259"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">coe_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">I</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_coe","kind":"theorem","line":250,"name":"BoxIntegral.Box.coe_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L250-L251"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_bot\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">coe_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_bot","kind":"theorem","line":247,"name":"BoxIntegral.Box.coe_bot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L247-L248"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.withBotCoe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">withBotCoe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeTC\">CoeTC</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/TypeTags.html#WithBot\">WithBot</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.withBotCoe","kind":"instance","line":244,"name":"BoxIntegral.Box.withBotCoe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L244-L245"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.withBotToSet\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">withBotToSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/TypeTags.html#WithBot\">WithBot</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span></div></div>","info":{"doc":"The set underlying this box: `⊥` is mapped to `∅`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.withBotToSet","kind":"def","line":240,"name":"BoxIntegral.Box.withBotToSet","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L240-L242"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instSemilatticeSup\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">instSemilatticeSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span>)</span></span></div></div>","info":{"doc":"`I ⊔ J` is the least box that includes both `I` and `J`. Since `↑I ∪ ↑J` is usually not a box,\n`↑(I ⊔ J)` is larger than `↑I ∪ ↑J`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instSemilatticeSup","kind":"instance","line":223,"name":"BoxIntegral.Box.instSemilatticeSup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L223-L232"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.isBounded\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">isBounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.IsBounded\">Bornology.IsBounded</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.isBounded","kind":"theorem","line":215,"name":"BoxIntegral.Box.isBounded","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L215-L216"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.isBounded_Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">isBounded_Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.IsBounded\">Bornology.IsBounded</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.isBounded_Icc","kind":"theorem","line":211,"name":"BoxIntegral.Box.isBounded_Icc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L211-L213"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_subset_Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">coe_subset_Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_subset_Icc","kind":"theorem","line":208,"name":"BoxIntegral.Box.coe_subset_Icc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L208-L209"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.monotone_upper\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">monotone_upper</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.monotone_upper","kind":"theorem","line":205,"name":"BoxIntegral.Box.monotone_upper","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L205-L206"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.antitone_lower\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">antitone_lower</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Antitone\">Antitone</a> <span class=\"fn\">fun (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.antitone_lower","kind":"theorem","line":202,"name":"BoxIntegral.Box.antitone_lower","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L202-L203"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.le_iff_Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">le_iff_Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">J</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.le_iff_Icc","kind":"theorem","line":199,"name":"BoxIntegral.Box.le_iff_Icc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L199-L200"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc_eq_pi\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">Icc_eq_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Operations.html#Set.pi\">pi</a></span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Icc\">Set.Icc</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <span class=\"fn\">i</span>)</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc_eq_pi","kind":"theorem","line":196,"name":"BoxIntegral.Box.Icc_eq_pi","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L196-L197"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.isCompact_Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">isCompact_Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.isCompact_Icc","kind":"theorem","line":193,"name":"BoxIntegral.Box.isCompact_Icc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L193-L194"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower_mem_Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">lower_mem_Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower_mem_Icc","kind":"theorem","line":189,"name":"BoxIntegral.Box.lower_mem_Icc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L189-L191"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper_mem_Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">upper_mem_Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper_mem_Icc","kind":"theorem","line":185,"name":"BoxIntegral.Box.upper_mem_Icc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L185-L187"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc_def\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">Icc_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Icc\">Set.Icc</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc_def","kind":"theorem","line":183,"name":"BoxIntegral.Box.Icc_def","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L183-L183"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderEmbedding\">↪o</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span></div></div>","info":{"doc":"Closed box corresponding to `I : BoxIntegral.Box ι`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc","kind":"def","line":179,"name":"BoxIntegral.Box.Icc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L179-L181"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instPartialOrder\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">instPartialOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instPartialOrder","kind":"instance","line":176,"name":"BoxIntegral.Box.instPartialOrder","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L176-L177"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.ne_of_disjoint_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">ne_of_disjoint_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span> <span class=\"fn\">↑<span class=\"fn\">J</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">J</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.ne_of_disjoint_coe","kind":"theorem","line":173,"name":"BoxIntegral.Box.ne_of_disjoint_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L173-L174"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.ext_iff\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">J</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">J</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.ext_iff","kind":"theorem","line":169,"name":"BoxIntegral.Box.ext_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L169-L169"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.ext\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">J</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.ext","kind":"theorem","line":169,"name":"BoxIntegral.Box.ext","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L169-L171"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_inj\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">coe_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">J</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_inj","kind":"theorem","line":165,"name":"BoxIntegral.Box.coe_inj","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L165-L167"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.injective_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">injective_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.Injective\">Function.Injective</a> <a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.toSet\">toSet</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.injective_coe","kind":"theorem","line":159,"name":"BoxIntegral.Box.injective_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L159-L163"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.le_iff_bounds\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">le_iff_bounds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.le_iff_bounds","kind":"theorem","line":156,"name":"BoxIntegral.Box.le_iff_bounds","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L156-L157"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_subset_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">coe_subset_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_subset_coe","kind":"theorem","line":153,"name":"BoxIntegral.Box.coe_subset_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L153-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.le_TFAE\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">le_TFAE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span><a href=\"./Init/Prelude.html#List.cons\">,</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">J</span></span><a href=\"./Init/Prelude.html#List.cons\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Icc\">Set.Icc</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Icc\">Set.Icc</a> <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span></span><a href=\"./Init/Prelude.html#List.cons\">,</a> <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span><a href=\"./Init/Prelude.html#List.cons\">]</a>.<a href=\"./Mathlib/Data/List/TFAE.html#List.TFAE\">TFAE</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.le_TFAE","kind":"theorem","line":141,"name":"BoxIntegral.Box.le_TFAE","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L141-L149"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.le_def\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">le_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">I</span>, <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">J</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.le_def","kind":"theorem","line":139,"name":"BoxIntegral.Box.le_def","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L139-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instLE\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">instLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instLE","kind":"instance","line":136,"name":"BoxIntegral.Box.instLE","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L136-L137"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.empty_ne_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">empty_ne_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.empty_ne_coe","kind":"theorem","line":132,"name":"BoxIntegral.Box.empty_ne_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L132-L134"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_ne_empty\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">coe_ne_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_ne_empty","kind":"theorem","line":128,"name":"BoxIntegral.Box.coe_ne_empty","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L128-L130"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.nonempty_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">nonempty_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/Data/Set/Defs.html#Set.Nonempty\">Nonempty</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.nonempty_coe","kind":"theorem","line":125,"name":"BoxIntegral.Box.nonempty_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L125-L126"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.exists_mem\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">exists_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.exists_mem","kind":"theorem","line":122,"name":"BoxIntegral.Box.exists_mem","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L122-L123"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper_mem\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">upper_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper_mem","kind":"theorem","line":118,"name":"BoxIntegral.Box.upper_mem","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L118-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_eq_pi\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">coe_eq_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Operations.html#Set.pi\">pi</a></span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <span class=\"fn\">i</span>)</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_eq_pi","kind":"theorem","line":115,"name":"BoxIntegral.Box.coe_eq_pi","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L115-L116"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mem_univ_Ioc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mem_univ_Ioc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Operations.html#Set.pi\">pi</a></span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <span class=\"fn\">i</span>)</span></span></span></span>) <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mem_univ_Ioc","kind":"theorem","line":112,"name":"BoxIntegral.Box.mem_univ_Ioc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L112-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mem_def\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mem_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <span class=\"fn\">i</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mem_def","kind":"theorem","line":110,"name":"BoxIntegral.Box.mem_def","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L110-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mem_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mem_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mem_coe","kind":"theorem","line":107,"name":"BoxIntegral.Box.mem_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L107-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mem_mk\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mem_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">u </span><span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">l</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">i</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk\">{</a> <span class=\"fn\">lower</span> := <span class=\"fn\">l</span>, <span class=\"fn\">upper</span> := <span class=\"fn\">u</span>, <span class=\"fn\">lower_lt_upper</span> := <span class=\"fn\">H</span> <a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk\">}</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">(<span class=\"fn\">l</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">u</span> <span class=\"fn\">i</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mem_mk","kind":"theorem","line":104,"name":"BoxIntegral.Box.mem_mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L104-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instCoeTCSetForallReal\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">instCoeTCSetForallReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeTC\">CoeTC</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instCoeTCSetForallReal","kind":"instance","line":101,"name":"BoxIntegral.Box.instCoeTCSetForallReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L101-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.toSet\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">toSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span></div></div>","info":{"doc":"The set of points in this box: this is the product of half-open intervals `(lower i, upper i]`,\nwhere `lower` and `upper` are this box' corners. ","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.toSet","kind":"def","line":96,"name":"BoxIntegral.Box.toSet","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L96-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instMembershipForallReal\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">instMembershipForallReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instMembershipForallReal","kind":"instance","line":93,"name":"BoxIntegral.Box.instMembershipForallReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L93-L94"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower_ne_upper\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">lower_ne_upper</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <span class=\"fn\">i</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower_ne_upper","kind":"theorem","line":90,"name":"BoxIntegral.Box.lower_ne_upper","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L90-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower_le_upper\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">lower_le_upper</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower_le_upper","kind":"theorem","line":87,"name":"BoxIntegral.Box.lower_le_upper","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L87-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instInhabited\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instInhabited","kind":"instance","line":84,"name":"BoxIntegral.Box.instInhabited","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L84-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower_lt_upper\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">lower_lt_upper</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\">lower</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\">upper</a></span> <span class=\"fn\">i</span></span></div></div>","info":{"doc":"Each lower coordinate is less than its upper coordinate: i.e., the box is non-empty ","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower_lt_upper","kind":"theorem","line":76,"name":"BoxIntegral.Box.lower_lt_upper","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L76-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">upper</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>","info":{"doc":"coordinates of the lower and upper corners of the box ","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper","kind":"def","line":74,"name":"BoxIntegral.Box.upper","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L74-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">lower</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>","info":{"doc":"coordinates of the lower and upper corners of the box ","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower","kind":"def","line":74,"name":"BoxIntegral.Box.lower","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L74-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lower </span><span class=\"fn\">upper</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lower_lt_upper</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">lower</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">upper</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk","kind":"ctor","line":72,"name":"BoxIntegral.Box.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L72-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_2</div></div>","info":{"doc":"A nontrivial rectangular box in `ι → ℝ` with corners `lower` and `upper`. Represents the product\nof half-open intervals `(lower i, upper i]`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box","kind":"structure","line":70,"name":"BoxIntegral.Box","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L70-L76"}}],"imports":["Init","Mathlib.Data.NNReal.Basic","Mathlib.Order.Fin.Tuple","Mathlib.Order.Interval.Set.Monotone","Mathlib.Topology.MetricSpace.Basic","Mathlib.Topology.MetricSpace.Bounded","Mathlib.Topology.MetricSpace.Pseudo.Real","Mathlib.Topology.Order.MonotoneConvergence"],"instances":[{"className":"Inhabited","name":"BoxIntegral.Box.instInhabited","typeNames":["BoxIntegral.Box"]},{"className":"Membership","name":"BoxIntegral.Box.instMembershipForallReal","typeNames":["BoxIntegral.Box"]},{"className":"CoeTC","name":"BoxIntegral.Box.instCoeTCSetForallReal","typeNames":["BoxIntegral.Box","Set"]},{"className":"LE","name":"BoxIntegral.Box.instLE","typeNames":["BoxIntegral.Box"]},{"className":"PartialOrder","name":"BoxIntegral.Box.instPartialOrder","typeNames":["BoxIntegral.Box"]},{"className":"SemilatticeSup","name":"BoxIntegral.Box.instSemilatticeSup","typeNames":["BoxIntegral.Box"]},{"className":"CoeTC","name":"BoxIntegral.Box.withBotCoe","typeNames":["WithBot","Set"]},{"className":"Min","name":"BoxIntegral.Box.WithBot.inf","typeNames":["WithBot"]},{"className":"Lattice","name":"BoxIntegral.Box.instLatticeWithBot","typeNames":["WithBot"]}],"name":"Mathlib.Analysis.BoxIntegral.Box.Basic"}