{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.AdjoinPair.algebraMap_gen₂\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">AdjoinPair</span>.<span class=\"name\">algebraMap_gen₂</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">L</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">(↥<span class=\"fn\"><span class=\"fn\">K</span>⟮<span class=\"fn\">x</span>, <span class=\"fn\">y</span>⟯</span>)</span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.AdjoinPair.gen₂\">gen₂</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.AdjoinPair.algebraMap_gen₂","kind":"theorem","line":844,"name":"IntermediateField.AdjoinPair.algebraMap_gen₂","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L844-L844"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.AdjoinPair.algebraMap_gen₁\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">AdjoinPair</span>.<span class=\"name\">algebraMap_gen₁</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">L</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">(↥<span class=\"fn\"><span class=\"fn\">K</span>⟮<span class=\"fn\">x</span>, <span class=\"fn\">y</span>⟯</span>)</span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.AdjoinPair.gen₁\">gen₁</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.AdjoinPair.algebraMap_gen₁","kind":"theorem","line":842,"name":"IntermediateField.AdjoinPair.algebraMap_gen₁","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L842-L842"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.AdjoinPair.gen₂\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">AdjoinPair</span>.<span class=\"name\">gen₂</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">L</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">K</span>⟮<span class=\"fn\">x</span>, <span class=\"fn\">y</span>⟯</span></span></div></div>","info":{"doc":"The second generator of an intermediate field of the form `K⟮x, y⟯`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.AdjoinPair.gen₂","kind":"def","line":839,"name":"IntermediateField.AdjoinPair.gen₂","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L839-L840"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.AdjoinPair.gen₁\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">AdjoinPair</span>.<span class=\"name\">gen₁</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">L</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">K</span>⟮<span class=\"fn\">x</span>, <span class=\"fn\">y</span>⟯</span></span></div></div>","info":{"doc":"The first generator of an intermediate field of the form `K⟮x, y⟯`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.AdjoinPair.gen₁","kind":"def","line":836,"name":"IntermediateField.AdjoinPair.gen₁","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L836-L837"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.mem_adjoin_pair_right\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">mem_adjoin_pair_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">L</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">K</span>⟮<span class=\"fn\">x</span>, <span class=\"fn\">y</span>⟯</span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.mem_adjoin_pair_right","kind":"theorem","line":833,"name":"IntermediateField.mem_adjoin_pair_right","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L833-L834"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.mem_adjoin_pair_left\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">mem_adjoin_pair_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">L</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">K</span>⟮<span class=\"fn\">x</span>, <span class=\"fn\">y</span>⟯</span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.mem_adjoin_pair_left","kind":"theorem","line":831,"name":"IntermediateField.mem_adjoin_pair_left","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L831-L831"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finiteDimensional_adjoin_pair\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">finiteDimensional_adjoin_pair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">L</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">K</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">K</span>⟮<span class=\"fn\">x</span>, <span class=\"fn\">y</span>⟯</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finiteDimensional_adjoin_pair","kind":"theorem","line":822,"name":"IntermediateField.finiteDimensional_adjoin_pair","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L822-L827"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.isAlgebraic_adjoin_pair\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">isAlgebraic_adjoin_pair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">L</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">K</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic/Defs.html#Algebra.IsAlgebraic\">Algebra.IsAlgebraic</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">K</span>⟮<span class=\"fn\">x</span>, <span class=\"fn\">y</span>⟯</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.isAlgebraic_adjoin_pair","kind":"theorem","line":817,"name":"IntermediateField.isAlgebraic_adjoin_pair","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L817-L820"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.cardinalMk_adjoin_le\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">cardinalMk_adjoin_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.adjoin\">adjoin</a> <span class=\"fn\">F</span> <span class=\"fn\">s</span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">F</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span>)</span>)</span> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">Cardinal.aleph0</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.cardinalMk_adjoin_le","kind":"theorem","line":809,"name":"IntermediateField.cardinalMk_adjoin_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L809-L811"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.lift_cardinalMk_adjoin_le\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">lift_cardinalMk_adjoin_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">Cardinal.lift.{u, v}</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.adjoin\">adjoin</a> <span class=\"fn\">F</span> <span class=\"fn\">s</span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">Cardinal.lift.{v, u}</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">F</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">Cardinal.lift.{u, v}</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span>)</span>)</span>)</span> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">Cardinal.aleph0</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.lift_cardinalMk_adjoin_le","kind":"theorem","line":800,"name":"IntermediateField.lift_cardinalMk_adjoin_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L800-L807"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#PowerBasis.equivAdjoinSimple_symm_gen\"><span class=\"name\">PowerBasis</span>.<span class=\"name\">equivAdjoinSimple_symm_gen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pb</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerBasis.html#PowerBasis\">PowerBasis</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pb</span>.<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#PowerBasis.equivAdjoinSimple\">equivAdjoinSimple</a></span>.<a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv.symm\">symm</a></span> <span class=\"fn\"><span class=\"fn\">pb</span>.<a href=\"./Mathlib/RingTheory/PowerBasis.html#PowerBasis.gen\">gen</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.AdjoinSimple.gen\">IntermediateField.AdjoinSimple.gen</a> <span class=\"fn\">K</span> <span class=\"fn\"><span class=\"fn\">pb</span>.<a href=\"./Mathlib/RingTheory/PowerBasis.html#PowerBasis.gen\">gen</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#PowerBasis.equivAdjoinSimple_symm_gen","kind":"theorem","line":785,"name":"PowerBasis.equivAdjoinSimple_symm_gen","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L785-L788"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#PowerBasis.equivAdjoinSimple_symm_aeval\"><span class=\"name\">PowerBasis</span>.<span class=\"name\">equivAdjoinSimple_symm_aeval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pb</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerBasis.html#PowerBasis\">PowerBasis</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pb</span>.<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#PowerBasis.equivAdjoinSimple\">equivAdjoinSimple</a></span>.<a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv.symm\">symm</a></span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/AlgebraMap.html#Polynomial.aeval\">Polynomial.aeval</a> <span class=\"fn\"><span class=\"fn\">pb</span>.<a href=\"./Mathlib/RingTheory/PowerBasis.html#PowerBasis.gen\">gen</a></span>)</span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/AlgebraMap.html#Polynomial.aeval\">Polynomial.aeval</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.AdjoinSimple.gen\">IntermediateField.AdjoinSimple.gen</a> <span class=\"fn\">K</span> <span class=\"fn\"><span class=\"fn\">pb</span>.<a href=\"./Mathlib/RingTheory/PowerBasis.html#PowerBasis.gen\">gen</a></span>)</span>)</span> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#PowerBasis.equivAdjoinSimple_symm_aeval","kind":"theorem","line":780,"name":"PowerBasis.equivAdjoinSimple_symm_aeval","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L780-L783"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#PowerBasis.equivAdjoinSimple_gen\"><span class=\"name\">PowerBasis</span>.<span class=\"name\">equivAdjoinSimple_gen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pb</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerBasis.html#PowerBasis\">PowerBasis</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pb</span>.<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#PowerBasis.equivAdjoinSimple\">equivAdjoinSimple</a></span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.AdjoinSimple.gen\">IntermediateField.AdjoinSimple.gen</a> <span class=\"fn\">K</span> <span class=\"fn\"><span class=\"fn\">pb</span>.<a href=\"./Mathlib/RingTheory/PowerBasis.html#PowerBasis.gen\">gen</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">pb</span>.<a href=\"./Mathlib/RingTheory/PowerBasis.html#PowerBasis.gen\">gen</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#PowerBasis.equivAdjoinSimple_gen","kind":"theorem","line":775,"name":"PowerBasis.equivAdjoinSimple_gen","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L775-L778"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#PowerBasis.equivAdjoinSimple_aeval\"><span class=\"name\">PowerBasis</span>.<span class=\"name\">equivAdjoinSimple_aeval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pb</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerBasis.html#PowerBasis\">PowerBasis</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pb</span>.<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#PowerBasis.equivAdjoinSimple\">equivAdjoinSimple</a></span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/AlgebraMap.html#Polynomial.aeval\">Polynomial.aeval</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.AdjoinSimple.gen\">IntermediateField.AdjoinSimple.gen</a> <span class=\"fn\">K</span> <span class=\"fn\"><span class=\"fn\">pb</span>.<a href=\"./Mathlib/RingTheory/PowerBasis.html#PowerBasis.gen\">gen</a></span>)</span>)</span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/AlgebraMap.html#Polynomial.aeval\">Polynomial.aeval</a> <span class=\"fn\"><span class=\"fn\">pb</span>.<a href=\"./Mathlib/RingTheory/PowerBasis.html#PowerBasis.gen\">gen</a></span>)</span> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#PowerBasis.equivAdjoinSimple_aeval","kind":"theorem","line":770,"name":"PowerBasis.equivAdjoinSimple_aeval","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L770-L773"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#PowerBasis.equivAdjoinSimple\"><span class=\"name\">PowerBasis</span>.<span class=\"name\">equivAdjoinSimple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pb</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerBasis.html#PowerBasis\">PowerBasis</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">K</span>⟮<span class=\"fn\"><span class=\"fn\">pb</span>.<a href=\"./Mathlib/RingTheory/PowerBasis.html#PowerBasis.gen\">gen</a></span>⟯</span></span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">K</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\">L</span></div></div>","info":{"doc":"`pb.equivAdjoinSimple` is the equivalence between `K⟮pb.gen⟯` and `L` itself. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#PowerBasis.equivAdjoinSimple","kind":"def","line":765,"name":"PowerBasis.equivAdjoinSimple","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L765-L768"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#minpoly.algEquiv_apply\"><span class=\"name\">minpoly</span>.<span class=\"name\">algEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">L</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic/Defs.html#IsAlgebraic\">IsAlgebraic</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mp</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">K</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#minpoly.algEquiv\">algEquiv</a> <span class=\"fn\">hx</span> <span class=\"fn\">h_mp</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.AdjoinSimple.gen\">IntermediateField.AdjoinSimple.gen</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.AdjoinSimple.gen\">IntermediateField.AdjoinSimple.gen</a> <span class=\"fn\">K</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"`minpoly.algEquiv` sends the generator of `K⟮x⟯` to the generator of `K⟮y⟯`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#minpoly.algEquiv_apply","kind":"theorem","line":747,"name":"minpoly.algEquiv_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L747-L753"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#minpoly.algEquiv\"><span class=\"name\">minpoly</span>.<span class=\"name\">algEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">L</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic/Defs.html#IsAlgebraic\">IsAlgebraic</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mp</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">K</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">K</span>⟮<span class=\"fn\">x</span>⟯</span></span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">K</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">K</span>⟮<span class=\"fn\">y</span>⟯</span></span></div></div>","info":{"doc":"The canonical `algEquiv` between `K⟮x⟯`and `K⟮y⟯`, sending `x` to `y`, where `x` and `y` have\nthe same minimal polynomial over `K`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#minpoly.algEquiv","kind":"def","line":738,"name":"minpoly.algEquiv","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L738-L745"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#minpoly.eq_of_root\"><span class=\"name\">minpoly</span>.<span class=\"name\">eq_of_root</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">L</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic/Defs.html#IsAlgebraic\">IsAlgebraic</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_ev</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/AlgebraMap.html#Polynomial.aeval\">Polynomial.aeval</a> <span class=\"fn\">y</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">K</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"If `y : L` is a root of `minpoly K x`, then `minpoly K y = minpoly K x`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#minpoly.eq_of_root","kind":"theorem","line":733,"name":"minpoly.eq_of_root","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L733-L736"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algEquivOfAssociated_apply_root\"><span class=\"name\">AdjoinRoot</span>.<span class=\"name\">algEquivOfAssociated_apply_root</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpq</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Associated.html#Associated\">Associated</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algEquivOfAssociated\">algEquivOfAssociated</a> <span class=\"fn\">hp</span> <span class=\"fn\">hpq</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot.root\">root</a> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot.root\">root</a> <span class=\"fn\">q</span></span></div></div>","info":{"doc":"`algEquivOfAssociated` sends `AdjoinRoot.root p` to `AdjoinRoot.root q`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algEquivOfAssociated_apply_root","kind":"theorem","line":722,"name":"AdjoinRoot.algEquivOfAssociated_apply_root","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L722-L725"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algEquivOfAssociated_toAlgHom\"><span class=\"name\">AdjoinRoot</span>.<span class=\"name\">algEquivOfAssociated_toAlgHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpq</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Associated.html#Associated\">Associated</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algEquivOfAssociated\">algEquivOfAssociated</a> <span class=\"fn\">hp</span> <span class=\"fn\">hpq</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot.liftHom\">liftHom</a> <span class=\"fn\">p</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot.root\">root</a> <span class=\"fn\">q</span>)</span> <span class=\"fn\">⋯</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algEquivOfAssociated_toAlgHom","kind":"theorem","line":717,"name":"AdjoinRoot.algEquivOfAssociated_toAlgHom","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L717-L720"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.coe_algEquivOfAssociated\"><span class=\"name\">AdjoinRoot</span>.<span class=\"name\">coe_algEquivOfAssociated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpq</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Associated.html#Associated\">Associated</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algEquivOfAssociated\">algEquivOfAssociated</a> <span class=\"fn\">hp</span> <span class=\"fn\">hpq</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.toFun\">toFun</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot.liftHom\">liftHom</a> <span class=\"fn\">p</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot.root\">root</a> <span class=\"fn\">q</span>)</span> <span class=\"fn\">⋯</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.coe_algEquivOfAssociated","kind":"theorem","line":712,"name":"AdjoinRoot.coe_algEquivOfAssociated","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L712-L715"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algEquivOfAssociated\"><span class=\"name\">AdjoinRoot</span>.<span class=\"name\">algEquivOfAssociated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpq</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Associated.html#Associated\">Associated</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot\">AdjoinRoot</a> <span class=\"fn\">p</span></span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">K</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot\">AdjoinRoot</a> <span class=\"fn\">q</span></span></div></div>","info":{"doc":"The canonical algebraic equivalence between `AdjoinRoot p` and `AdjoinRoot q`,\nwhere the two polynomials `p q : K[X]` are associated. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algEquivOfAssociated","kind":"def","line":699,"name":"AdjoinRoot.algEquivOfAssociated","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L699-L710"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algEquivOfEq_apply_root\"><span class=\"name\">AdjoinRoot</span>.<span class=\"name\">algEquivOfEq_apply_root</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_eq</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algEquivOfEq\">algEquivOfEq</a> <span class=\"fn\">hp</span> <span class=\"fn\">h_eq</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot.root\">root</a> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot.root\">root</a> <span class=\"fn\">q</span></span></div></div>","info":{"doc":"`algEquivOfEq` sends `AdjoinRoot.root p` to `AdjoinRoot.root q`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algEquivOfEq_apply_root","kind":"theorem","line":694,"name":"AdjoinRoot.algEquivOfEq_apply_root","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L694-L697"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algEquivOfEq_toAlgHom\"><span class=\"name\">AdjoinRoot</span>.<span class=\"name\">algEquivOfEq_toAlgHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_eq</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algEquivOfEq\">algEquivOfEq</a> <span class=\"fn\">hp</span> <span class=\"fn\">h_eq</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot.liftHom\">liftHom</a> <span class=\"fn\">p</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot.root\">root</a> <span class=\"fn\">q</span>)</span> <span class=\"fn\">⋯</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algEquivOfEq_toAlgHom","kind":"theorem","line":690,"name":"AdjoinRoot.algEquivOfEq_toAlgHom","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L690-L692"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.coe_algEquivOfEq\"><span class=\"name\">AdjoinRoot</span>.<span class=\"name\">coe_algEquivOfEq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_eq</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algEquivOfEq\">algEquivOfEq</a> <span class=\"fn\">hp</span> <span class=\"fn\">h_eq</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.toFun\">toFun</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot.liftHom\">liftHom</a> <span class=\"fn\">p</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot.root\">root</a> <span class=\"fn\">q</span>)</span> <span class=\"fn\">⋯</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.coe_algEquivOfEq","kind":"theorem","line":686,"name":"AdjoinRoot.coe_algEquivOfEq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L686-L688"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algEquivOfEq\"><span class=\"name\">AdjoinRoot</span>.<span class=\"name\">algEquivOfEq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_eq</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot\">AdjoinRoot</a> <span class=\"fn\">p</span></span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">K</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot\">AdjoinRoot</a> <span class=\"fn\">q</span></span></div></div>","info":{"doc":"The canonical algebraic equivalence between `AdjoinRoot p` and `AdjoinRoot q`, where\nthe two polynomials `p q : K[X]` are equal. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algEquivOfEq","kind":"def","line":674,"name":"AdjoinRoot.algEquivOfEq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L674-L684"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algHomOfDvd_apply_root\"><span class=\"name\">AdjoinRoot</span>.<span class=\"name\">algHomOfDvd_apply_root</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpq</span> : <span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">p</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algHomOfDvd\">algHomOfDvd</a> <span class=\"fn\">hpq</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot.root\">root</a> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot.root\">root</a> <span class=\"fn\">q</span></span></div></div>","info":{"doc":"`algHomOfDvd` sends `AdjoinRoot.root p` to `AdjoinRoot.root q`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algHomOfDvd_apply_root","kind":"theorem","line":669,"name":"AdjoinRoot.algHomOfDvd_apply_root","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L669-L672"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.coe_algHomOfDvd\"><span class=\"name\">AdjoinRoot</span>.<span class=\"name\">coe_algHomOfDvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpq</span> : <span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">p</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algHomOfDvd\">algHomOfDvd</a> <span class=\"fn\">hpq</span>)</span>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.toRingHom\">toRingHom</a></span></span>)</span>.<a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#OneHom.toFun\">toFun</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot.liftHom\">liftHom</a> <span class=\"fn\">p</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot.root\">root</a> <span class=\"fn\">q</span>)</span> <span class=\"fn\">⋯</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.coe_algHomOfDvd","kind":"theorem","line":665,"name":"AdjoinRoot.coe_algHomOfDvd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L665-L667"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algHomOfDvd\"><span class=\"name\">AdjoinRoot</span>.<span class=\"name\">algHomOfDvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpq</span> : <span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">p</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot\">AdjoinRoot</a> <span class=\"fn\">p</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">K</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot\">AdjoinRoot</a> <span class=\"fn\">q</span></span></div></div>","info":{"doc":"The canonical algebraic homomorphism from `AdjoinRoot p` to `AdjoinRoot q`, where\nthe polynomial `q : K[X]` divides `p`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#AdjoinRoot.algHomOfDvd","kind":"def","line":659,"name":"AdjoinRoot.algHomOfDvd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L659-L663"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#Polynomial.irreducible_comp\"><span class=\"name\">Polynomial</span>.<span class=\"name\">irreducible_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hfm</span> : <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Polynomial/Degree/Definitions.html#Polynomial.Monic\">Monic</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hgm</span> : <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Algebra/Polynomial/Degree/Definitions.html#Polynomial.Monic\">Monic</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Irreducible/Defs.html#Irreducible\">Irreducible</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u) [<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>] [<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">E</span></span>] (<span class=\"fn\">x</span> : <span class=\"fn\">E</span>),\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Irreducible/Defs.html#Irreducible\">Irreducible</a> (<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.map\">map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">K</span>⟮<span class=\"fn\">x</span>⟯</span></span>)</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">C</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.AdjoinSimple.gen\">IntermediateField.AdjoinSimple.gen</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Irreducible/Defs.html#Irreducible\">Irreducible</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.comp\">comp</a></span> <span class=\"fn\">g</span>)</span></span></div></div>","info":{"doc":"Let `f, g` be monic polynomials over `K`. If `f` is irreducible, and `g(x) - α` is irreducible\nin `K⟮α⟯` with `α` a root of `f`, then `f(g(x))` is irreducible. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#Polynomial.irreducible_comp","kind":"theorem","line":598,"name":"Polynomial.irreducible_comp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L598-L646"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.card_algHom_adjoin_integral\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">card_algHom_adjoin_integral</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <span class=\"fn\">E</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_sep</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Separable.html#IsSeparable\">IsSeparable</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_splits</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Splits.html#Polynomial.Splits\">Polynomial.Splits</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Finite.html#Nat.card\">Nat.card</a> (<span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">F</span>⟮<span class=\"fn\">α</span>⟯</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">F</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">K</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/Algebra/Polynomial/Degree/Definitions.html#Polynomial.natDegree\">natDegree</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.card_algHom_adjoin_integral","kind":"theorem","line":588,"name":"IntermediateField.card_algHom_adjoin_integral","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L588-L594"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.fintypeOfAlgHomAdjoinIntegral\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">fintypeOfAlgHomAdjoinIntegral</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <span class=\"fn\">E</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> (<span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">F</span>⟮<span class=\"fn\">α</span>⟯</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">F</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">K</span>)</span></div></div>","info":{"doc":"Fintype of algebra homomorphism `F⟮α⟯ →ₐ[F] K` ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.fintypeOfAlgHomAdjoinIntegral","kind":"def","line":584,"name":"IntermediateField.fintypeOfAlgHomAdjoinIntegral","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L584-L586"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.algHomAdjoinIntegralEquiv_symm_apply_gen\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">algHomAdjoinIntegralEquiv_symm_apply_gen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <span class=\"fn\">E</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/Algebra/Polynomial/Roots.html#Polynomial.aroots\">aroots</a></span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.algHomAdjoinIntegralEquiv\">algHomAdjoinIntegralEquiv</a> <span class=\"fn\">F</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.AdjoinSimple.gen\">AdjoinSimple.gen</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.algHomAdjoinIntegralEquiv_symm_apply_gen","kind":"theorem","line":578,"name":"IntermediateField.algHomAdjoinIntegralEquiv_symm_apply_gen","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L578-L582"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.algHomAdjoinIntegralEquiv\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">algHomAdjoinIntegralEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <span class=\"fn\">E</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">F</span>⟮<span class=\"fn\">α</span>⟯</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">F</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">K</span>) <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/Algebra/Polynomial/Roots.html#Polynomial.aroots\">aroots</a></span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>","info":{"doc":"Algebra homomorphism `F⟮α⟯ →ₐ[F] K` are in bijection with the set of roots\nof `minpoly α` in `K`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.algHomAdjoinIntegralEquiv","kind":"def","line":570,"name":"IntermediateField.algHomAdjoinIntegralEquiv","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L570-L576"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finiteDimensional_adjoin\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">finiteDimensional_adjoin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">L</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hS</span> : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.adjoin\">adjoin</a> <span class=\"fn\">K</span> <span class=\"fn\">S</span>)</span></span></span></div></div>","info":{"doc":"If `L / K` is a field extension, `S` is a finite subset of `L`, such that every element of `S`\nis integral (= algebraic) over `K`, then `K(S) / K` is a finite extension.\nA direct corollary of `finiteDimensional_iSup_of_finite`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finiteDimensional_adjoin","kind":"theorem","line":559,"name":"IntermediateField.finiteDimensional_adjoin","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L559-L566"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.isAlgebraic_adjoin\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">isAlgebraic_adjoin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">L</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hS</span> : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic/Defs.html#Algebra.IsAlgebraic\">Algebra.IsAlgebraic</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.adjoin\">adjoin</a> <span class=\"fn\">K</span> <span class=\"fn\">S</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.isAlgebraic_adjoin","kind":"theorem","line":554,"name":"IntermediateField.isAlgebraic_adjoin","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L554-L557"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.isAlgebraic_iSup\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">isAlgebraic_iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic/Defs.html#Algebra.IsAlgebraic\">Algebra.IsAlgebraic</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\">t</span> <span class=\"fn\">i</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic/Defs.html#Algebra.IsAlgebraic\">Algebra.IsAlgebraic</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">(⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>","info":{"doc":"A compositum of algebraic extensions is algebraic ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.isAlgebraic_iSup","kind":"theorem","line":542,"name":"IntermediateField.isAlgebraic_iSup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L542-L552"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#minpoly.degree_dvd\"><span class=\"name\">minpoly</span>.<span class=\"name\">degree_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">L</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Algebra/Polynomial/Degree/Definitions.html#Polynomial.natDegree\">natDegree</a></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span></div></div>","info":{"doc":"If `x : L` is an integral element in a field extension `L` over `K`, then the degree of the\nminimal polynomial of `x` over `K` divides `[L : K]`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#minpoly.degree_dvd","kind":"theorem","line":533,"name":"minpoly.degree_dvd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L533-L539"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#minpoly.degree_le\"><span class=\"name\">minpoly</span>.<span class=\"name\">degree_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">L</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Algebra/Polynomial/Degree/Definitions.html#Polynomial.degree\">degree</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#minpoly.degree_le","kind":"theorem","line":529,"name":"minpoly.degree_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L529-L531"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#minpoly.natDegree_le\"><span class=\"name\">minpoly</span>.<span class=\"name\">natDegree_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">L</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Algebra/Polynomial/Degree/Definitions.html#Polynomial.natDegree\">natDegree</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#minpoly.natDegree_le","kind":"theorem","line":524,"name":"minpoly.natDegree_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L524-L527"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.exists_lt_finrank_of_infinite_dimensional\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">exists_lt_finrank_of_infinite_dimensional</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic/Defs.html#Algebra.IsAlgebraic\">Algebra.IsAlgebraic</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnfd</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>), <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\">L</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\">L</span></span></span></span></div></div>","info":{"doc":"If `E / F` is an infinite algebraic extension, then there exists an intermediate field\n`L / F` with arbitrarily large finite extension degree. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.exists_lt_finrank_of_infinite_dimensional","kind":"theorem","line":504,"name":"IntermediateField.exists_lt_finrank_of_infinite_dimensional","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L504-L522"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.instFiniteSubtypeMemBot\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">instFiniteSubtypeMemBot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Finiteness/Defs.html#Module.Finite\">Module.Finite</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.instFiniteSubtypeMemBot","kind":"instance","line":501,"name":"IntermediateField.instFiniteSubtypeMemBot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L501-L501"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin_minpoly_coeff_of_exists_primitive_element\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">adjoin_minpoly_coeff_of_exists_primitive_element</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <span class=\"fn\">E</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hprim</span> : <span class=\"fn\"><span class=\"fn\">F</span>⟮<span class=\"fn\">α</span>⟯</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.adjoin\">adjoin</a> <span class=\"fn\">F</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">(↥<span class=\"fn\">K</span>)</span> <span class=\"fn\">E</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">(↥<span class=\"fn\">K</span>)</span> <span class=\"fn\">α</span>)</span>)</span>.<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.coeffs\">coeffs</a></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></div></div>","info":{"doc":"If `E / F` is a finite extension such that `E = F(α)`, then for any intermediate field `K`, the\n`F` adjoin the coefficients of `minpoly K α` is equal to `K` itself. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin_minpoly_coeff_of_exists_primitive_element","kind":"theorem","line":471,"name":"IntermediateField.adjoin_minpoly_coeff_of_exists_primitive_element","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L471-L499"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin_eq_top_of_adjoin_eq_top\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">adjoin_eq_top_of_adjoin_eq_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">E</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hprim</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.adjoin\">adjoin</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.adjoin\">adjoin</a> <span class=\"fn\">E</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"If `K / E / F` is a field extension tower, `S ⊂ K` is such that `F(S) = K`,\nthen `E(S) = K`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin_eq_top_of_adjoin_eq_top","kind":"theorem","line":463,"name":"IntermediateField.adjoin_eq_top_of_adjoin_eq_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L463-L469"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin.finrank\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">adjoin</span>.<span class=\"name\">finrank</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">L</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">K</span>⟮<span class=\"fn\">x</span>⟯</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Algebra/Polynomial/Degree/Definitions.html#Polynomial.natDegree\">natDegree</a></span></div></div>","info":{"doc":"If `x` is an algebraic element of field `K`, then its minimal polynomial has degree\n`[K(x) : K]`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin.finrank","kind":"theorem","line":455,"name":"IntermediateField.adjoin.finrank","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L455-L461"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.isAlgebraic_adjoin_simple\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">isAlgebraic_adjoin_simple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">L</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic/Defs.html#Algebra.IsAlgebraic\">Algebra.IsAlgebraic</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">K</span>⟮<span class=\"fn\">x</span>⟯</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.isAlgebraic_adjoin_simple","kind":"theorem","line":452,"name":"IntermediateField.isAlgebraic_adjoin_simple","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L452-L453"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin.finiteDimensional\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">adjoin</span>.<span class=\"name\">finiteDimensional</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">L</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">K</span>⟮<span class=\"fn\">x</span>⟯</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin.finiteDimensional","kind":"theorem","line":449,"name":"IntermediateField.adjoin.finiteDimensional","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L449-L450"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin.powerBasis_dim\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">adjoin</span>.<span class=\"name\">powerBasis_dim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">L</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin.powerBasis\">powerBasis</a> <span class=\"fn\">hx</span>)</span>.<a href=\"./Mathlib/RingTheory/PowerBasis.html#PowerBasis.dim\">dim</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Algebra/Polynomial/Degree/Definitions.html#Polynomial.natDegree\">natDegree</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin.powerBasis_dim","kind":"theorem","line":439,"name":"IntermediateField.adjoin.powerBasis_dim","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L439-L439"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin.powerBasis_gen\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">adjoin</span>.<span class=\"name\">powerBasis_gen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">L</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin.powerBasis\">powerBasis</a> <span class=\"fn\">hx</span>)</span>.<a href=\"./Mathlib/RingTheory/PowerBasis.html#PowerBasis.gen\">gen</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.AdjoinSimple.gen\">AdjoinSimple.gen</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin.powerBasis_gen","kind":"theorem","line":439,"name":"IntermediateField.adjoin.powerBasis_gen","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L439-L439"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin.powerBasis\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">adjoin</span>.<span class=\"name\">powerBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">L</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerBasis.html#PowerBasis\">PowerBasis</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">K</span>⟮<span class=\"fn\">x</span>⟯</span></span></span></div></div>","info":{"doc":"The power basis `1, x, ..., x ^ (d - 1)` for `K⟮x⟯`,\nwhere `d` is the degree of the minimal polynomial of `x`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin.powerBasis","kind":"def","line":437,"name":"IntermediateField.adjoin.powerBasis","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L437-L447"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.powerBasisAux\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">powerBasisAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">L</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/Defs.html#Module.Basis\">Module.Basis</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">K</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Algebra/Polynomial/Degree/Definitions.html#Polynomial.natDegree\">natDegree</a></span>)</span> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">K</span>⟮<span class=\"fn\">x</span>⟯</span></span></span></div></div>","info":{"doc":"The elements `1, x, ..., x ^ (d - 1)` form a basis for `K⟮x⟯`,\nwhere `d` is the degree of the minimal polynomial of `x`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.powerBasisAux","kind":"def","line":429,"name":"IntermediateField.powerBasisAux","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L429-L435"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin_root_eq_top\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">adjoin_root_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Irreducible/Defs.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">K</span>⟮<span class=\"fn\"><a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot.root\">AdjoinRoot.root</a> <span class=\"fn\">p</span></span>⟯</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin_root_eq_top","kind":"theorem","line":422,"name":"IntermediateField.adjoin_root_eq_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L422-L423"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoinRootEquivAdjoin_symm_apply_gen\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">adjoinRootEquivAdjoin_symm_apply_gen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <span class=\"fn\">E</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoinRootEquivAdjoin\">adjoinRootEquivAdjoin</a> <span class=\"fn\">F</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv.symm\">symm</a></span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.AdjoinSimple.gen\">AdjoinSimple.gen</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot.root\">AdjoinRoot.root</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoinRootEquivAdjoin_symm_apply_gen","kind":"theorem","line":417,"name":"IntermediateField.adjoinRootEquivAdjoin_symm_apply_gen","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L417-L420"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoinRootEquivAdjoin_apply_root\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">adjoinRootEquivAdjoin_apply_root</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <span class=\"fn\">E</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoinRootEquivAdjoin\">adjoinRootEquivAdjoin</a> <span class=\"fn\">F</span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot.root\">AdjoinRoot.root</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.AdjoinSimple.gen\">AdjoinSimple.gen</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoinRootEquivAdjoin_apply_root","kind":"theorem","line":413,"name":"IntermediateField.adjoinRootEquivAdjoin_apply_root","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L413-L415"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoinRootEquivAdjoin\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">adjoinRootEquivAdjoin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <span class=\"fn\">E</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/AdjoinRoot.html#AdjoinRoot\">AdjoinRoot</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span>)</span></span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">F</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">F</span>⟮<span class=\"fn\">α</span>⟯</span></span></div></div>","info":{"doc":"algebra isomorphism between `AdjoinRoot` and `F⟮α⟯` ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoinRootEquivAdjoin","kind":"def","line":385,"name":"IntermediateField.adjoinRootEquivAdjoin","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L385-L411"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.aeval_gen_minpoly\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">aeval_gen_minpoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/AlgebraMap.html#Polynomial.aeval\">Polynomial.aeval</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.AdjoinSimple.gen\">AdjoinSimple.gen</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.aeval_gen_minpoly","kind":"theorem","line":379,"name":"IntermediateField.aeval_gen_minpoly","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L379-L383"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.minpoly_gen\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">minpoly_gen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.AdjoinSimple.gen\">AdjoinSimple.gen</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.minpoly_gen","kind":"theorem","line":375,"name":"IntermediateField.minpoly_gen","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L375-L377"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.subsingleton_of_finrank_adjoin_le_one\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">subsingleton_of_finrank_adjoin_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">E</span>), <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">F</span>⟮<span class=\"fn\">x</span>⟯</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.subsingleton_of_finrank_adjoin_le_one","kind":"theorem","line":360,"name":"IntermediateField.subsingleton_of_finrank_adjoin_le_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L360-L362"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.bot_eq_top_of_finrank_adjoin_le_one\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">bot_eq_top_of_finrank_adjoin_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">E</span>), <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">F</span>⟮<span class=\"fn\">x</span>⟯</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"If `F⟮x⟯` has dimension `≤1` over `F` for every `x ∈ E` then `F = E`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.bot_eq_top_of_finrank_adjoin_le_one","kind":"theorem","line":354,"name":"IntermediateField.bot_eq_top_of_finrank_adjoin_le_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L354-L358"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.subsingleton_of_finrank_adjoin_eq_one\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">subsingleton_of_finrank_adjoin_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">E</span>), <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">F</span>⟮<span class=\"fn\">x</span>⟯</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.subsingleton_of_finrank_adjoin_eq_one","kind":"theorem","line":350,"name":"IntermediateField.subsingleton_of_finrank_adjoin_eq_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L350-L352"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.subsingleton_of_rank_adjoin_eq_one\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">subsingleton_of_rank_adjoin_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">E</span>), <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">F</span>⟮<span class=\"fn\">x</span>⟯</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.subsingleton_of_rank_adjoin_eq_one","kind":"theorem","line":346,"name":"IntermediateField.subsingleton_of_rank_adjoin_eq_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L346-L348"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.bot_eq_top_of_finrank_adjoin_eq_one\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">bot_eq_top_of_finrank_adjoin_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">E</span>), <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">F</span>⟮<span class=\"fn\">x</span>⟯</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.bot_eq_top_of_finrank_adjoin_eq_one","kind":"theorem","line":340,"name":"IntermediateField.bot_eq_top_of_finrank_adjoin_eq_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L340-L344"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.bot_eq_top_of_rank_adjoin_eq_one\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">bot_eq_top_of_rank_adjoin_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">E</span>), <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">F</span>⟮<span class=\"fn\">x</span>⟯</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"If `F⟮x⟯` has dimension `1` over `F` for every `x ∈ E` then `F = E`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.bot_eq_top_of_rank_adjoin_eq_one","kind":"theorem","line":333,"name":"IntermediateField.bot_eq_top_of_rank_adjoin_eq_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L333-L338"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finrank_adjoin_simple_eq_one_iff\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">finrank_adjoin_simple_eq_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <span class=\"fn\">E</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">F</span>⟮<span class=\"fn\">α</span>⟯</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finrank_adjoin_simple_eq_one_iff","kind":"theorem","line":329,"name":"IntermediateField.finrank_adjoin_simple_eq_one_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L329-L331"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finrank_adjoin_eq_one_iff\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">finrank_adjoin_eq_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.adjoin\">adjoin</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">S</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finrank_adjoin_eq_one_iff","kind":"theorem","line":326,"name":"IntermediateField.finrank_adjoin_eq_one_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L326-L327"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.rank_adjoin_simple_eq_one_iff\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">rank_adjoin_simple_eq_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <span class=\"fn\">E</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">F</span>⟮<span class=\"fn\">α</span>⟯</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.rank_adjoin_simple_eq_one_iff","kind":"theorem","line":322,"name":"IntermediateField.rank_adjoin_simple_eq_one_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L322-L324"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.rank_adjoin_eq_one_iff\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">rank_adjoin_eq_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.adjoin\">adjoin</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">S</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.rank_adjoin_eq_one_iff","kind":"theorem","line":319,"name":"IntermediateField.rank_adjoin_eq_one_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L319-L320"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.isSimpleOrder_of_finrank_prime\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">isSimpleOrder_of_finrank_prime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Atoms.html#IsSimpleOrder\">IsSimpleOrder</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.isSimpleOrder_of_finrank_prime","kind":"theorem","line":311,"name":"IntermediateField.isSimpleOrder_of_finrank_prime","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L311-L317"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.bot_eq_top_iff_finrank_eq_one\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">bot_eq_top_iff_finrank_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.bot_eq_top_iff_finrank_eq_one","kind":"theorem","line":306,"name":"IntermediateField.bot_eq_top_iff_finrank_eq_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L306-L308"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finrank_eq_one_iff_eq_top\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">finrank_eq_one_iff_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">(↥<span class=\"fn\">K</span>)</span> <span class=\"fn\">E</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finrank_eq_one_iff_eq_top","kind":"theorem","line":298,"name":"IntermediateField.finrank_eq_one_iff_eq_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L298-L304"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finrank_top'\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">finrank_top'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finrank_top'","kind":"theorem","line":295,"name":"IntermediateField.finrank_top'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L295-L296"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.rank_top'\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">rank_top'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.rank_top'","kind":"theorem","line":292,"name":"IntermediateField.rank_top'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L292-L293"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finrank_top\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">finrank_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">(↥<a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span> <span class=\"fn\">E</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finrank_top","kind":"theorem","line":289,"name":"IntermediateField.finrank_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L289-L290"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.rank_top\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">rank_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">(↥<a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span> <span class=\"fn\">E</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.rank_top","kind":"theorem","line":286,"name":"IntermediateField.rank_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L286-L287"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finrank_bot'\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">finrank_bot'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">(↥<a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>)</span> <span class=\"fn\">E</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finrank_bot'","kind":"theorem","line":283,"name":"IntermediateField.finrank_bot'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L283-L284"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.rank_bot'\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">rank_bot'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">(↥<a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>)</span> <span class=\"fn\">E</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.rank_bot'","kind":"theorem","line":280,"name":"IntermediateField.rank_bot'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L280-L281"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finrank_bot\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">finrank_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finrank_bot","kind":"theorem","line":276,"name":"IntermediateField.finrank_bot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L276-L278"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.rank_bot\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">rank_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.rank_bot","kind":"theorem","line":272,"name":"IntermediateField.rank_bot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L272-L274"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finrank_eq_one_iff\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">finrank_eq_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\">K</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finrank_eq_one_iff","kind":"theorem","line":267,"name":"IntermediateField.finrank_eq_one_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L267-L270"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.rank_eq_one_iff\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">rank_eq_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\">K</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.rank_eq_one_iff","kind":"theorem","line":262,"name":"IntermediateField.rank_eq_one_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L262-L265"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.exists_finset_of_mem_adjoin\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">exists_finset_of_mem_adjoin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">E</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.adjoin\">adjoin</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">E</span></span>), <span class=\"fn\">↑<span class=\"fn\">T</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.adjoin\">adjoin</a> <span class=\"fn\">F</span> <span class=\"fn\">↑<span class=\"fn\">T</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.exists_finset_of_mem_adjoin","kind":"theorem","line":240,"name":"IntermediateField.exists_finset_of_mem_adjoin","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L240-L248"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.exists_finset_of_mem_supr''\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">exists_finset_of_mem_supr''</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic/Defs.html#Algebra.IsAlgebraic\">Algebra.IsAlgebraic</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">E</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) × <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span></span>)</span></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">⨆ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.adjoin\">adjoin</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">F</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span>.<a href=\"./Mathlib/Algebra/Polynomial/Roots.html#Polynomial.rootSet\">rootSet</a></span> <span class=\"fn\">E</span>)</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.exists_finset_of_mem_supr''","kind":"theorem","line":230,"name":"IntermediateField.exists_finset_of_mem_supr''","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L230-L238"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.exists_finset_of_mem_supr'\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">exists_finset_of_mem_supr'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">E</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) × <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span></span>)</span></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">⨆ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">F</span>⟮<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span></span>⟯</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.exists_finset_of_mem_supr'","kind":"theorem","line":225,"name":"IntermediateField.exists_finset_of_mem_supr'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L225-L228"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.exists_finset_of_mem_iSup\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">exists_finset_of_mem_iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">E</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">ι</span></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">⨆ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.exists_finset_of_mem_iSup","kind":"theorem","line":219,"name":"IntermediateField.exists_finset_of_mem_iSup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L219-L223"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.instIsCompactlyGenerated\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">instIsCompactlyGenerated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompactlyGenerated/Basic.html#IsCompactlyGenerated\">IsCompactlyGenerated</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span>)</span></span></div></div>","info":{"doc":"The lattice of intermediate fields is compactly generated. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.instIsCompactlyGenerated","kind":"instance","line":211,"name":"IntermediateField.instIsCompactlyGenerated","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L211-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin_finite_isCompactElement\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">adjoin_finite_isCompactElement</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Data/Finite/Defs.html#Set.Finite\">Finite</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompactlyGenerated/Basic.html#CompleteLattice.IsCompactElement\">CompleteLattice.IsCompactElement</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.adjoin\">adjoin</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span>)</span></span></div></div>","info":{"doc":"Adjoining a finite subset is compact in the lattice of intermediate fields. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin_finite_isCompactElement","kind":"theorem","line":207,"name":"IntermediateField.adjoin_finite_isCompactElement","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L207-L209"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin_finset_isCompactElement\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">adjoin_finset_isCompactElement</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompactlyGenerated/Basic.html#CompleteLattice.IsCompactElement\">CompleteLattice.IsCompactElement</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.adjoin\">adjoin</a> <span class=\"fn\">F</span> <span class=\"fn\">↑<span class=\"fn\">S</span></span>)</span></span></div></div>","info":{"doc":"Adjoining a finite subset is compact in the lattice of intermediate fields. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin_finset_isCompactElement","kind":"theorem","line":200,"name":"IntermediateField.adjoin_finset_isCompactElement","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L200-L205"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin_simple_isCompactElement\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">adjoin_simple_isCompactElement</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompactlyGenerated/Basic.html#CompleteLattice.IsCompactElement\">CompleteLattice.IsCompactElement</a> <span class=\"fn\"><span class=\"fn\">F</span>⟮<span class=\"fn\">x</span>⟯</span></span></div></div>","info":{"doc":"Adjoining a single element is compact in the lattice of intermediate fields. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin_simple_isCompactElement","kind":"theorem","line":192,"name":"IntermediateField.adjoin_simple_isCompactElement","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L192-L198"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin_rank_le_of_isAlgebraic_right\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">adjoin_rank_le_of_isAlgebraic_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">E</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">halg</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic/Defs.html#Algebra.IsAlgebraic\">Algebra.IsAlgebraic</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\">L</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">E</span> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.adjoin\">adjoin</a> <span class=\"fn\">E</span> <span class=\"fn\">↑<span class=\"fn\">L</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\">L</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin_rank_le_of_isAlgebraic_right","kind":"theorem","line":183,"name":"IntermediateField.adjoin_rank_le_of_isAlgebraic_right","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L183-L186"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin_rank_le_of_isAlgebraic_left\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">adjoin_rank_le_of_isAlgebraic_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">E</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">halg</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic/Defs.html#Algebra.IsAlgebraic\">Algebra.IsAlgebraic</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">E</span> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.adjoin\">adjoin</a> <span class=\"fn\">E</span> <span class=\"fn\">↑<span class=\"fn\">L</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\">L</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin_rank_le_of_isAlgebraic_left","kind":"theorem","line":178,"name":"IntermediateField.adjoin_rank_le_of_isAlgebraic_left","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L178-L181"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin_rank_le_of_isAlgebraic\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">adjoin_rank_le_of_isAlgebraic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">E</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">halg</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic/Defs.html#Algebra.IsAlgebraic\">Algebra.IsAlgebraic</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic/Defs.html#Algebra.IsAlgebraic\">Algebra.IsAlgebraic</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\">L</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">E</span> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.adjoin\">adjoin</a> <span class=\"fn\">E</span> <span class=\"fn\">↑<span class=\"fn\">L</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">F</span> <span class=\"fn\">↥<span class=\"fn\">L</span></span></span></div></div>","info":{"doc":"If `K / E / F` is a field extension tower, `L` is an intermediate field of `K / F`, such that\neither `E / F` or `L / F` is algebraic, then `[E(L) : E] ≤ [L : F]`. A corollary of\n`Subalgebra.adjoin_rank_le` since in this case `E(L) = E[L]`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.adjoin_rank_le_of_isAlgebraic","kind":"theorem","line":166,"name":"IntermediateField.adjoin_rank_le_of_isAlgebraic","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L166-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.isSplittingField_iSup\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">isSplittingField_iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h0</span> : <span class=\"fn\">∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/SplittingField/IsSplittingField.html#Polynomial.IsSplittingField\">Polynomial.IsSplittingField</a> <span class=\"fn\">K</span> <span class=\"fn\">(↥<span class=\"fn\">(<span class=\"fn\">t</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/SplittingField/IsSplittingField.html#Polynomial.IsSplittingField\">Polynomial.IsSplittingField</a> <span class=\"fn\">K</span> <span class=\"fn\">(↥<span class=\"fn\">(⨆ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span></span>)</span>)</span> <span class=\"fn\">(∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span>)</span></span></div></div>","info":{"doc":"A compositum of splitting fields is a splitting field ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.isSplittingField_iSup","kind":"theorem","line":144,"name":"IntermediateField.isSplittingField_iSup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L144-L157"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finiteDimensional_iSup_of_finset'\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">finiteDimensional_iSup_of_finset'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\">t</span> <span class=\"fn\">i</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">(⨆ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finiteDimensional_iSup_of_finset'","kind":"theorem","line":138,"name":"IntermediateField.finiteDimensional_iSup_of_finset'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L138-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finiteDimensional_iSup_of_finset\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">finiteDimensional_iSup_of_finset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\">t</span> <span class=\"fn\">i</span>)</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">(⨆ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>","info":{"doc":"See `finiteDimensional_iSup_of_finset'` for a stronger version,\nthat was the one used in mathlib3. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finiteDimensional_iSup_of_finset","kind":"instance","line":131,"name":"IntermediateField.finiteDimensional_iSup_of_finset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L131-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finiteDimensional_iSup_of_finite\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">finiteDimensional_iSup_of_finite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\">t</span> <span class=\"fn\">i</span>)</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">(⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finiteDimensional_iSup_of_finite","kind":"instance","line":120,"name":"IntermediateField.finiteDimensional_iSup_of_finite","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L120-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.toSubalgebra_iSup_of_directed\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">toSubalgebra_iSup_of_directed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dir</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Directed.html#Directed\">Directed</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">t</span>)</span>.<a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField.toSubalgebra\">toSubalgebra</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">t</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField.toSubalgebra\">toSubalgebra</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.toSubalgebra_iSup_of_directed","kind":"theorem","line":114,"name":"IntermediateField.toSubalgebra_iSup_of_directed","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L114-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.coe_iSup_of_directed\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">coe_iSup_of_directed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dir</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Directed.html#Directed\">Directed</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">t</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⋃ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">t</span> <span class=\"fn\">i</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.coe_iSup_of_directed","kind":"theorem","line":104,"name":"IntermediateField.coe_iSup_of_directed","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L104-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finrank_sup_le\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">finrank_sup_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E1 </span><span class=\"fn\">E2</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\">E1</span> ⊔ <span class=\"fn\">E2</span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">E1</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">E2</span></span></span></div></div>","info":{"doc":"If `E1` and `E2` are intermediate fields, then the `Module.finrank` of\nthe compositum of `E1` and `E2` is less than or equal to the product of that of `E1` and `E2`. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finrank_sup_le","kind":"theorem","line":87,"name":"IntermediateField.finrank_sup_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L87-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.rank_sup_le_of_isAlgebraic\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">rank_sup_le_of_isAlgebraic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E1 </span><span class=\"fn\">E2</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">halg</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic/Defs.html#Algebra.IsAlgebraic\">Algebra.IsAlgebraic</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">E1</span></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic/Defs.html#Algebra.IsAlgebraic\">Algebra.IsAlgebraic</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">E2</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\">E1</span> ⊔ <span class=\"fn\">E2</span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">E1</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">E2</span></span></span></div></div>","info":{"doc":"If `E1` and `E2` are intermediate fields, and at least one them are algebraic, then the rank of\nthe compositum of `E1` and `E2` is less than or equal to the product of that of `E1` and `E2`.\nNote that this result is also true without algebraic assumption,\nbut the proof becomes very complicated. ","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.rank_sup_le_of_isAlgebraic","kind":"theorem","line":77,"name":"IntermediateField.rank_sup_le_of_isAlgebraic","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L77-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finiteDimensional_sup\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">finiteDimensional_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E1 </span><span class=\"fn\">E2</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">E1</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">E2</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\">E1</span> ⊔ <span class=\"fn\">E2</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.finiteDimensional_sup","kind":"instance","line":68,"name":"IntermediateField.finiteDimensional_sup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L68-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.mem_adjoin_simple_iff\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">mem_adjoin_simple_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <span class=\"fn\">E</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">F</span>⟮<span class=\"fn\">α</span>⟯</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">F</span></span>) (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">F</span></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/AlgebraMap.html#Polynomial.aeval\">Polynomial.aeval</a> <span class=\"fn\">α</span>)</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/AlgebraMap.html#Polynomial.aeval\">Polynomial.aeval</a> <span class=\"fn\">α</span>)</span> <span class=\"fn\">s</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.mem_adjoin_simple_iff","kind":"theorem","line":57,"name":"IntermediateField.mem_adjoin_simple_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L57-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.mem_adjoin_iff\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">mem_adjoin_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.adjoin\">adjoin</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(↑<span class=\"fn\">S</span>)</span> <span class=\"fn\">F</span></span>) (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(↑<span class=\"fn\">S</span>)</span> <span class=\"fn\">F</span></span>),\n    <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.aeval\">MvPolynomial.aeval</a> <a href=\"./Init/Prelude.html#Subtype.val\">Subtype.val</a>)</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.aeval\">MvPolynomial.aeval</a> <a href=\"./Init/Prelude.html#Subtype.val\">Subtype.val</a>)</span> <span class=\"fn\">s</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.mem_adjoin_iff","kind":"theorem","line":52,"name":"IntermediateField.mem_adjoin_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L52-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.mem_adjoin_range_iff\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">mem_adjoin_range_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.adjoin\">adjoin</a> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">ι</span> <span class=\"fn\">F</span></span>) (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">ι</span> <span class=\"fn\">F</span></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.aeval\">MvPolynomial.aeval</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.aeval\">MvPolynomial.aeval</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">s</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.mem_adjoin_range_iff","kind":"theorem","line":46,"name":"IntermediateField.mem_adjoin_range_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L46-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.FG.of_restrictScalars\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">FG</span>.<span class=\"name\">of_restrictScalars</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">L</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E'</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">L</span> <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField.restrictScalars\">restrictScalars</a> <span class=\"fn\">K</span> <span class=\"fn\">E'</span>)</span>.<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.FG\">FG</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">E'</span>.<a href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Defs.html#IntermediateField.FG\">FG</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.FG.of_restrictScalars","kind":"theorem","line":30,"name":"IntermediateField.FG.of_restrictScalars","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L30-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.restrictScalars_le_iff\"><span class=\"name\">IntermediateField</span>.<span class=\"name\">restrictScalars_le_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">L</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E₁ </span><span class=\"fn\">E₂</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField\">IntermediateField</a> <span class=\"fn\">L</span> <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField.restrictScalars\">restrictScalars</a> <span class=\"fn\">K</span> <span class=\"fn\">E₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField/Basic.html#IntermediateField.restrictScalars\">restrictScalars</a> <span class=\"fn\">K</span> <span class=\"fn\">E₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">E₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">E₂</span></div></div>","info":{"doc":"","docLink":"./Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.html#IntermediateField.restrictScalars_le_iff","kind":"theorem","line":26,"name":"IntermediateField.restrictScalars_le_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/FieldTheory/IntermediateField/Adjoin/Basic.lean#L26-L28"}}],"imports":["Init","Mathlib.Algebra.Algebra.Subalgebra.Directed","Mathlib.Algebra.Algebra.Subalgebra.IsSimpleOrder","Mathlib.FieldTheory.Separable","Mathlib.FieldTheory.SplittingField.IsSplittingField","Mathlib.LinearAlgebra.Dual.Lemmas","Mathlib.RingTheory.Adjoin.Dimension","Mathlib.RingTheory.TensorProduct.Finite"],"instances":[{"className":"Module.Finite","name":"IntermediateField.finiteDimensional_sup","typeNames":["Subtype"]},{"className":"Module.Finite","name":"IntermediateField.finiteDimensional_iSup_of_finite","typeNames":["Subtype"]},{"className":"Module.Finite","name":"IntermediateField.finiteDimensional_iSup_of_finset","typeNames":["Subtype"]},{"className":"IsCompactlyGenerated","name":"IntermediateField.instIsCompactlyGenerated","typeNames":["IntermediateField"]},{"className":"Module.Finite","name":"IntermediateField.instFiniteSubtypeMemBot","typeNames":["Subtype"]}],"name":"Mathlib.FieldTheory.IntermediateField.Adjoin.Basic"}