{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/Quotient/Noetherian.html#Ideal.Quotient.isNoetherianRing\"><span class=\"name\">Ideal</span>.<span class=\"name\">Quotient</span>.<span class=\"name\">isNoetherianRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Noetherian/Defs.html#IsNoetherianRing\">IsNoetherianRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Noetherian/Defs.html#IsNoetherianRing\">IsNoetherianRing</a> (<span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">â§¸</a> <span class=\"fn\">I</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/RingTheory/Ideal/Quotient/Noetherian.html#Ideal.Quotient.isNoetherianRing","kind":"instance","line":13,"name":"Ideal.Quotient.isNoetherianRing","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/RingTheory/Ideal/Quotient/Noetherian.lean#L13-L15"}}],"imports":["Init","Mathlib.RingTheory.Ideal.Quotient.Operations","Mathlib.RingTheory.Noetherian.Basic"],"instances":[{"className":"IsNoetherian","name":"Ideal.Quotient.isNoetherianRing","typeNames":["HasQuotient.Quotient"]}],"name":"Mathlib.RingTheory.Ideal.Quotient.Noetherian"}