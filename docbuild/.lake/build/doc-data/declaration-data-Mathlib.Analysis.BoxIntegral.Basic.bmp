{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.mcShane_of_forall_isLittleO\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">mcShane_of_forall_isLittleO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hB0</span> : <span class=\"fn\">∀ (<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>), <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">J</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">F</span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>),\n    <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span>,\n      <span class=\"fn\">∀ <span class=\"fn\">ε</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\">∃ <span class=\"fn\">δ</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\">∀ <span class=\"fn\">J</span> ≤ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">x</span> <span class=\"fn\">δ</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">vol</span> <span class=\"fn\">J</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">J</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">J</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.McShane\">IntegrationParams.McShane</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">I</span>)</span></span></div></div>","info":{"doc":"Suppose that there exists a nonnegative box-additive function `B` with the following property.\n\nFor every `c : ℝ≥0`, a point `x ∈ I.Icc`, and a positive `ε` there exists `δ > 0` such that for any\nbox `J ≤ I` such that\n\n- `J.Icc ⊆ Metric.closedBall x δ`;\n- if `l.bDistortion` (i.e., `l = ⊥`), then the distortion of `J` is less than or equal to `c`,\n\nthe distance between the term `vol J (f x)` of an integral sum corresponding to `J` and `g J` is\nless than or equal to `ε * B J`.\n\nThen `f` is McShane integrable on `I` with integral `g I`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.mcShane_of_forall_isLittleO","kind":"theorem","line":863,"name":"BoxIntegral.HasIntegral.mcShane_of_forall_isLittleO","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L863-L881"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.of_le_Henstock_of_forall_isLittleO\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">of_le_Henstock_of_forall_isLittleO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.Henstock\">IntegrationParams.Henstock</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hB0</span> : <span class=\"fn\">∀ (<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>), <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">J</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">F</span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Countable</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₁</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>),\n    <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">s</span>,\n      <span class=\"fn\">∀ <span class=\"fn\">ε</span> &gt; <span class=\"fn\">0</span>,\n        <span class=\"fn\">∃ <span class=\"fn\">δ</span> &gt; <span class=\"fn\">0</span>,\n          <span class=\"fn\">∀ <span class=\"fn\">J</span> ≤ <span class=\"fn\">I</span>,\n            <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">x</span> <span class=\"fn\">δ</span></span> →\n              <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.bDistortion\">bDistortion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\">distortion</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">vol</span> <span class=\"fn\">J</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">J</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span></span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₂</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>),\n    <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">s</span>,\n      <span class=\"fn\">∀ <span class=\"fn\">ε</span> &gt; <span class=\"fn\">0</span>,\n        <span class=\"fn\">∃ <span class=\"fn\">δ</span> &gt; <span class=\"fn\">0</span>,\n          <span class=\"fn\">∀ <span class=\"fn\">J</span> ≤ <span class=\"fn\">I</span>,\n            <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">x</span> <span class=\"fn\">δ</span></span> →\n              <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.bDistortion\">bDistortion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\">distortion</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">vol</span> <span class=\"fn\">J</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">J</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">J</span></span></span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">I</span>)</span></span></div></div>","info":{"doc":"A function `f` has Henstock (or `⊥`) integral over `I` is equal to the value of a box-additive\nfunction `g` on `I` provided that `vol J (f x)` is sufficiently close to `g J` for sufficiently\nsmall boxes `J ∋ x`. This lemma is useful to prove, e.g., to prove the Divergence theorem for\nintegral along `⊥`.\n\nLet `l` be either `BoxIntegral.IntegrationParams.Henstock` or `⊥`. Let `g` a box-additive function\non subboxes of `I`. Suppose that there exists a nonnegative box-additive function `B` and a\ncountable set `s` with the following property.\n\nFor every `c : ℝ≥0`, a point `x ∈ I.Icc`, and a positive `ε` there exists `δ > 0` such that for any\nbox `J ≤ I` such that\n\n- `x ∈ J.Icc ⊆ Metric.closedBall x δ`;\n- if `l.bDistortion` (i.e., `l = ⊥`), then the distortion of `J` is less than or equal to `c`,\n\nthe distance between the term `vol J (f x)` of an integral sum corresponding to `J` and `g J` is\nless than or equal to `ε` if `x ∈ s` and is less than or equal to `ε * B J` otherwise.\n\nThen `f` is integrable on `I` along `l` with integral `g I`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.of_le_Henstock_of_forall_isLittleO","kind":"theorem","line":831,"name":"BoxIntegral.HasIntegral.of_le_Henstock_of_forall_isLittleO","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L831-L861"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.of_bRiemann_eq_false_of_forall_isLittleO\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">of_bRiemann_eq_false_of_forall_isLittleO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.bRiemann\">bRiemann</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hB0</span> : <span class=\"fn\">∀ (<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>), <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">J</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">F</span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Countable</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlH</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Set/Defs.html#Set.Nonempty\">Nonempty</a></span> → <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.bHenstock\">bHenstock</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₁</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>),\n    <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">s</span>,\n      <span class=\"fn\">∀ <span class=\"fn\">ε</span> &gt; <span class=\"fn\">0</span>,\n        <span class=\"fn\">∃ <span class=\"fn\">δ</span> &gt; <span class=\"fn\">0</span>,\n          <span class=\"fn\">∀ <span class=\"fn\">J</span> ≤ <span class=\"fn\">I</span>,\n            <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">x</span> <span class=\"fn\">δ</span></span> →\n              <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.bDistortion\">bDistortion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\">distortion</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">vol</span> <span class=\"fn\">J</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">J</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span></span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H₂</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>),\n    <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">s</span>,\n      <span class=\"fn\">∀ <span class=\"fn\">ε</span> &gt; <span class=\"fn\">0</span>,\n        <span class=\"fn\">∃ <span class=\"fn\">δ</span> &gt; <span class=\"fn\">0</span>,\n          <span class=\"fn\">∀ <span class=\"fn\">J</span> ≤ <span class=\"fn\">I</span>,\n            <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">x</span> <span class=\"fn\">δ</span></span> →\n              <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.bHenstock\">bHenstock</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">J</span></span>)</span> →\n                <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.bDistortion\">bDistortion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\">distortion</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">vol</span> <span class=\"fn\">J</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">J</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">J</span></span></span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">I</span>)</span></span></div></div>","info":{"doc":"This is an auxiliary lemma used to prove two statements at once. Use one of the next two\nlemmas instead. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.of_bRiemann_eq_false_of_forall_isLittleO","kind":"theorem","line":754,"name":"BoxIntegral.HasIntegral.of_bRiemann_eq_false_of_forall_isLittleO","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L754-L829"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_of_continuousOn\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integrable_of_continuousOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsLocallyFiniteMeasure\">MeasureTheory.IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Measure.html#MeasureTheory.Measure.toBoxAdditive\">toBoxAdditive</a></span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap.toSMul\">toSMul</a></span></span></div></div>","info":{"doc":"A continuous function is box-integrable with respect to any locally finite measure.\n\nThis is true for any volume with bounded variation. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_of_continuousOn","kind":"theorem","line":738,"name":"BoxIntegral.integrable_of_continuousOn","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L738-L750"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_of_bounded_and_ae_continuous\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integrable_of_bounded_and_ae_continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">∃ (<span class=\"fn\">C</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span>, <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsLocallyFiniteMeasure\">MeasureTheory.IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Measure.html#MeasureTheory.Measure.toBoxAdditive\">toBoxAdditive</a></span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap.toSMul\">toSMul</a></span></span></div></div>","info":{"doc":"A function that is bounded on a box `I` and a.e. continuous is integrable on `I`.\n\nThis is a version of `integrable_of_bounded_and_ae_continuousWithinAt` with a stronger continuity\nassumption so that the user does not need to specialize the continuity assumption to each box on\nwhich the theorem is to be applied. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_of_bounded_and_ae_continuous","kind":"theorem","line":726,"name":"BoxIntegral.integrable_of_bounded_and_ae_continuous","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L726-L735"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_of_bounded_and_ae_continuousWithinAt\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integrable_of_bounded_and_ae_continuousWithinAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">∃ (<span class=\"fn\">C</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span>, <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsLocallyFiniteMeasure\">MeasureTheory.IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Restrict.html#MeasureTheory.Measure.restrict\">restrict</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span>)</span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousWithinAt\">ContinuousWithinAt</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span>)</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Measure.html#MeasureTheory.Measure.toBoxAdditive\">toBoxAdditive</a></span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap.toSMul\">toSMul</a></span></span></div></div>","info":{"doc":"A function that is bounded and a.e. continuous on a box `I` is integrable on `I`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_of_bounded_and_ae_continuousWithinAt","kind":"theorem","line":622,"name":"BoxIntegral.integrable_of_bounded_and_ae_continuousWithinAt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L622-L724"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.toBoxAdditive_apply\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">toBoxAdditive_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.toBoxAdditive\">toBoxAdditive</a></span> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">J</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.toBoxAdditive_apply","kind":"theorem","line":602,"name":"BoxIntegral.Integrable.toBoxAdditive_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L602-L602"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.toBoxAdditive\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">toBoxAdditive</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">F</span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span></div></div>","info":{"doc":"If `f` is integrable on `I`, then `fun J ↦ integral J l f vol` is box-additive on subboxes of\n`I`: if `π₁`, `π₂` are two prepartitions of `I` covering the same part of `I`, the sum of integrals\nof `f` over the boxes of `π₁` is equal to the sum of integrals of `f` over the boxes of `π₂`.\n\nSee also `BoxIntegral.Integrable.sum_integral_congr` for an unbundled version. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.toBoxAdditive","kind":"def","line":597,"name":"BoxIntegral.Integrable.toBoxAdditive","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L597-L608"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.sum_integral_congr\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">sum_integral_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π₁ </span><span class=\"fn\">π₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.iUnion\">iUnion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.iUnion\">iUnion</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">J</span> ∈ <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.boxes\">boxes</a></span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">J</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">J</span> ∈ <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.boxes\">boxes</a></span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">J</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></span></div></div>","info":{"doc":"If `f` is integrable on `I`, then `fun J ↦ integral J l f vol` is box-additive on subboxes of\n`I`: if `π₁`, `π₂` are two prepartitions of `I` covering the same part of `I`, the sum of integrals\nof `f` over the boxes of `π₁` is equal to the sum of integrals of `f` over the boxes of `π₂`.\n\nSee also `BoxIntegral.Integrable.toBoxAdditive` for a bundled version. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.sum_integral_congr","kind":"theorem","line":585,"name":"BoxIntegral.Integrable.sum_integral_congr","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L585-L595"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.tendsto_integralSum_sum_integral\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">tendsto_integralSum_sum_integral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.toFilteriUnion\">IntegrationParams.toFilteriUnion</a> <span class=\"fn\">I</span> <span class=\"fn\">π₀</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(∑ <span class=\"fn\">J</span> ∈ <span class=\"fn\"><span class=\"fn\">π₀</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.boxes\">boxes</a></span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">J</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span>)</span></span></div></div>","info":{"doc":"Integral sum of `f` over a tagged prepartition `π` such that `π.Union = π₀.Union` tends to the\nsum of integrals of `f` over the boxes of `π₀`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.tendsto_integralSum_sum_integral","kind":"theorem","line":574,"name":"BoxIntegral.Integrable.tendsto_integralSum_sum_integral","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L574-L583"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.dist_integralSum_sum_integral_le_of_memBaseSet\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">dist_integralSum_sum_integral_le_of_memBaseSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h0</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hπ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.MemBaseSet\">MemBaseSet</a></span> <span class=\"fn\">I</span> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">h</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.convergenceR\">convergenceR</a></span> <span class=\"fn\">ε</span> <span class=\"fn\">c</span>)</span> <span class=\"fn\">π</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span>)</span> <span class=\"fn\">(∑ <span class=\"fn\">J</span> ∈ <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.boxes\">boxes</a></span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">J</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span></div></div>","info":{"doc":"**Henstock-Sacks inequality**. Let `r : ℝⁿ → (0, ∞)` be a function such that for any tagged\n*partition* of `I` subordinate to `r`, the integral sum of `f` over this partition differs from the\nintegral of `f` by at most `ε`. Then for any tagged *prepartition* `π` subordinate to `r`, the\nintegral sum of `f` over this prepartition differs from the integral of `f` over the part of `I`\ncovered by `π` by at most `ε`.\n\nThe actual statement\n\n- uses `BoxIntegral.Integrable.convergenceR` instead of a predicate assumption on `r`;\n- uses `BoxIntegral.IntegrationParams.MemBaseSet` instead of “subordinate to `r`” to\n  account for additional requirements like being a Henstock partition or having a bounded\n  distortion;\n","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.dist_integralSum_sum_integral_le_of_memBaseSet","kind":"theorem","line":556,"name":"BoxIntegral.Integrable.dist_integralSum_sum_integral_le_of_memBaseSet","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L556-L572"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.dist_integralSum_sum_integral_le_of_memBaseSet_of_iUnion_eq\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">dist_integralSum_sum_integral_le_of_memBaseSet_of_iUnion_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h0</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hπ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.MemBaseSet\">MemBaseSet</a></span> <span class=\"fn\">I</span> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">h</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.convergenceR\">convergenceR</a></span> <span class=\"fn\">ε</span> <span class=\"fn\">c</span>)</span> <span class=\"fn\">π</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">π₀</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.iUnion\">iUnion</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span>)</span> <span class=\"fn\">(∑ <span class=\"fn\">J</span> ∈ <span class=\"fn\"><span class=\"fn\">π₀</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.boxes\">boxes</a></span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">J</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span></div></div>","info":{"doc":"**Henstock-Sacks inequality**. Let `r : ℝⁿ → (0, ∞)` be a function such that for any tagged\n*partition* of `I` subordinate to `r`, the integral sum of `f` over this partition differs from the\nintegral of `f` by at most `ε`. Then for any tagged *prepartition* `π` subordinate to `r`, the\nintegral sum of `f` over this prepartition differs from the integral of `f` over the part of `I`\ncovered by `π` by at most `ε`.\n\nThe actual statement\n\n- uses `BoxIntegral.Integrable.convergenceR` instead of a predicate assumption on `r`;\n- uses `BoxIntegral.IntegrationParams.MemBaseSet` instead of “subordinate to `r`” to\n  account for additional requirements like being a Henstock partition or having a bounded\n  distortion;\n- takes an extra argument `π₀ : prepartition I` and an assumption `π.Union = π₀.Union` instead of\n  using `π.to_prepartition`.\n","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.dist_integralSum_sum_integral_le_of_memBaseSet_of_iUnion_eq","kind":"theorem","line":496,"name":"BoxIntegral.Integrable.dist_integralSum_sum_integral_le_of_memBaseSet_of_iUnion_eq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L496-L554"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.tendsto_integralSum_toFilteriUnion_single\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">tendsto_integralSum_toFilteriUnion_single</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ</span> : <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.toFilteriUnion\">IntegrationParams.toFilteriUnion</a> <span class=\"fn\">I</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.single\">Prepartition.single</a> <span class=\"fn\">I</span> <span class=\"fn\">J</span> <span class=\"fn\">hJ</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">J</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span>)</span>)</span></span></div></div>","info":{"doc":"If `f` is integrable on a box `I`, then integral sums of `f` over tagged prepartitions\nthat cover exactly a subbox `J ≤ I` tend to the integral of `f` over `J` along `l`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.tendsto_integralSum_toFilteriUnion_single","kind":"theorem","line":488,"name":"BoxIntegral.Integrable.tendsto_integralSum_toFilteriUnion_single","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L488-L494"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.to_subbox\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">to_subbox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ</span> : <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">J</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></div></div>","info":{"doc":"If `f` is integrable on a box `I`, then it is integrable on any subbox of `I`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.to_subbox","kind":"theorem","line":484,"name":"BoxIntegral.Integrable.to_subbox","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L484-L486"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.to_subbox_aux\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">to_subbox_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I </span><span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hJ</span> : <span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">y</span> : <span class=\"fn\">F</span>),\n  <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">J</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.toFilteriUnion\">IntegrationParams.toFilteriUnion</a> <span class=\"fn\">I</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.single\">Prepartition.single</a> <span class=\"fn\">I</span> <span class=\"fn\">J</span> <span class=\"fn\">hJ</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">y</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.to_subbox_aux","kind":"theorem","line":477,"name":"BoxIntegral.Integrable.to_subbox_aux","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L477-L482"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.cauchy_map_integralSum_toFilteriUnion\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">cauchy_map_integralSum_toFilteriUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">Filter.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.toFilteriUnion\">IntegrationParams.toFilteriUnion</a> <span class=\"fn\">I</span> <span class=\"fn\">π₀</span>)</span>)</span></span></div></div>","info":{"doc":"If `f` is integrable on a box `I` along `l`, then for any fixed subset `s` of `I` that can be\nrepresented as a finite union of boxes, the integral sums of `f` over tagged prepartitions that\ncover exactly `s` form a Cauchy “sequence” along `l`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.cauchy_map_integralSum_toFilteriUnion","kind":"theorem","line":465,"name":"BoxIntegral.Integrable.cauchy_map_integralSum_toFilteriUnion","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L465-L473"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.tendsto_integralSum_toFilter_prod_self_inf_iUnion_eq_uniformity\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">tendsto_integralSum_toFilter_prod_self_inf_iUnion_eq_uniformity</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\"><span class=\"fn\">π</span>.1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\"><span class=\"fn\">π</span>.2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.toFilter\">toFilter</a></span> <span class=\"fn\">I</span></span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.toFilter\">toFilter</a></span> <span class=\"fn\">I</span></span> ⊓\n    <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.principal\">Filter.principal</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">π</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.1</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.2</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">F</span>)</span></span></div></div>","info":{"doc":"If `f` is integrable on `I` along `l`, then for two sufficiently fine tagged prepartitions\n(in the sense of the filter `BoxIntegral.IntegrationParams.toFilter l I`) such that they cover\nthe same part of `I`, the integral sums of `f` over `π₁` and `π₂` are very close to each other. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.tendsto_integralSum_toFilter_prod_self_inf_iUnion_eq_uniformity","kind":"theorem","line":451,"name":"BoxIntegral.Integrable.tendsto_integralSum_toFilter_prod_self_inf_iUnion_eq_uniformity","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L451-L463"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.dist_integralSum_le_of_memBaseSet\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">dist_integralSum_le_of_memBaseSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε₁ </span><span class=\"fn\">ε₂</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π₁ </span><span class=\"fn\">π₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpos₁</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε₁</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpos₂</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.MemBaseSet\">MemBaseSet</a></span> <span class=\"fn\">I</span> <span class=\"fn\">c₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">h</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.convergenceR\">convergenceR</a></span> <span class=\"fn\">ε₁</span> <span class=\"fn\">c₁</span>)</span> <span class=\"fn\">π₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.MemBaseSet\">MemBaseSet</a></span> <span class=\"fn\">I</span> <span class=\"fn\">c₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">h</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.convergenceR\">convergenceR</a></span> <span class=\"fn\">ε₂</span> <span class=\"fn\">c₂</span>)</span> <span class=\"fn\">π₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">HU</span> : <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π₁</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π₂</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">ε₂</span></div></div>","info":{"doc":"**Henstock-Sacks inequality**. Let `r₁ r₂ : ℝⁿ → (0, ∞)` be a function such that for any tagged\n*partition* of `I` subordinate to `rₖ`, `k=1,2`, the integral sum of `f` over this partition differs\nfrom the integral of `f` by at most `εₖ`. Then for any two tagged *prepartition* `π₁ π₂` subordinate\nto `r₁` and `r₂` respectively and covering the same part of `I`, the integral sums of `f` over these\nprepartitions differ from each other by at most `ε₁ + ε₂`.\n\nThe actual statement\n\n- uses `BoxIntegral.Integrable.convergenceR` instead of a predicate assumption on `r`;\n- uses `BoxIntegral.IntegrationParams.MemBaseSet` instead of “subordinate to `r`” to\n  account for additional requirements like being a Henstock partition or having a bounded\n  distortion.\n\nSee also `BoxIntegral.Integrable.dist_integralSum_sum_integral_le_of_memBaseSet_of_iUnion_eq` and\n`BoxIntegral.Integrable.dist_integralSum_sum_integral_le_of_memBaseSet`.\n","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.dist_integralSum_le_of_memBaseSet","kind":"theorem","line":415,"name":"BoxIntegral.Integrable.dist_integralSum_le_of_memBaseSet","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L415-L449"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.dist_integralSum_integral_le_of_memBaseSet\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">dist_integralSum_integral_le_of_memBaseSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₀</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hπ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.MemBaseSet\">MemBaseSet</a></span> <span class=\"fn\">I</span> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">h</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.convergenceR\">convergenceR</a></span> <span class=\"fn\">ε</span> <span class=\"fn\">c</span>)</span> <span class=\"fn\">π</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hπp</span> : <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition\">IsPartition</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.dist_integralSum_integral_le_of_memBaseSet","kind":"theorem","line":409,"name":"BoxIntegral.Integrable.dist_integralSum_integral_le_of_memBaseSet","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L409-L413"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.convergenceR_cond\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">convergenceR_cond</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ε</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.RCond\">RCond</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">h</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.convergenceR\">convergenceR</a></span> <span class=\"fn\">ε</span> <span class=\"fn\">c</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.convergenceR_cond","kind":"theorem","line":404,"name":"BoxIntegral.Integrable.convergenceR_cond","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L404-L407"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.convergenceR\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">convergenceR</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ε</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span></span></span></span></div></div>","info":{"doc":"If `ε > 0`, then `BoxIntegral.Integrable.convergenceR` is a function `r : ℝ≥0 → ℝⁿ → (0, ∞)`\nsuch that for every `c : ℝ≥0`, for every tagged partition `π` subordinate to `r` (and satisfying\nadditional distortion estimates if `BoxIntegral.IntegrationParams.bDistortion l = true`), the\ncorresponding integral sum is `ε`-close to the integral.\n\nIf `BoxIntegral.IntegrationParams.bRiemann = true`, then `r c x` does not depend on `x`. If\n`ε ≤ 0`, then we use `r c x = 1`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.convergenceR","kind":"def","line":391,"name":"BoxIntegral.Integrable.convergenceR","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L391-L400"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.norm_integral_le_of_le_const\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">norm_integral_le_of_le_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span>, <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsLocallyFiniteMeasure\">MeasureTheory.IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Measure.html#MeasureTheory.Measure.toBoxAdditive\">toBoxAdditive</a></span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap.toSMul\">toSMul</a></span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.real\">real</a></span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.norm_integral_le_of_le_const","kind":"theorem","line":356,"name":"BoxIntegral.norm_integral_le_of_le_const","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L356-L359"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.norm_integral_le_of_norm_le\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">norm_integral_le_of_norm_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hle</span> : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span>, <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsLocallyFiniteMeasure\">MeasureTheory.IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Measure.html#MeasureTheory.Measure.toBoxAdditive\">toBoxAdditive</a></span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap.toSMul\">toSMul</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Measure.html#MeasureTheory.Measure.toBoxAdditive\">toBoxAdditive</a></span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap.toSMul\">toSMul</a></span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Measure.html#MeasureTheory.Measure.toBoxAdditive\">toBoxAdditive</a></span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap.toSMul\">toSMul</a></span></span></div></div>","info":{"doc":"If `‖f x‖ ≤ g x` on `[l, u]` and `g` is integrable, then the norm of the integral of `f` is less\nthan or equal to the integral of `g`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.norm_integral_le_of_norm_le","kind":"theorem","line":341,"name":"BoxIntegral.norm_integral_le_of_norm_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L341-L354"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_nonneg\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integral_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">Box.Icc</a> <span class=\"fn\">I</span></span>, <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsLocallyFiniteMeasure\">MeasureTheory.IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Measure.html#MeasureTheory.Measure.toBoxAdditive\">toBoxAdditive</a></span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap.toSMul\">toSMul</a></span></span></div></div>","info":{"doc":"The integral of a nonnegative function w.r.t. a volume generated by a locally-finite measure is\nnonnegative. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_nonneg","kind":"theorem","line":332,"name":"BoxIntegral.integral_nonneg","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L332-L339"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_smul\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integral_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) =&gt; <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_smul","kind":"theorem","line":322,"name":"BoxIntegral.integral_smul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L322-L328"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.of_smul\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">of_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> (<span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span>) <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.of_smul","kind":"theorem","line":318,"name":"BoxIntegral.Integrable.of_smul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L318-L320"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.smul\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> (<span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span>) <span class=\"fn\">vol</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.smul","kind":"theorem","line":315,"name":"BoxIntegral.Integrable.smul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L315-L316"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.smul\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> (<span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span>) <span class=\"fn\">vol</span> (<span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.smul","kind":"theorem","line":310,"name":"BoxIntegral.HasIntegral.smul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L310-L313"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.sum\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) =&gt; <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span></span>)</span> <span class=\"fn\">vol</span> <span class=\"fn\">(∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">i</span></span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.sum","kind":"theorem","line":300,"name":"BoxIntegral.HasIntegral.sum","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L300-L308"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_zero\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integral_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) =&gt; <span class=\"fn\">0</span>)</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_zero","kind":"theorem","line":297,"name":"BoxIntegral.integral_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L297-L298"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_zero\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integrable_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) =&gt; <span class=\"fn\">0</span>)</span> <span class=\"fn\">vol</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_zero","kind":"theorem","line":294,"name":"BoxIntegral.integrable_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L294-L295"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.hasIntegral_zero\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">hasIntegral_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) =&gt; <span class=\"fn\">0</span>)</span> <span class=\"fn\">vol</span> <span class=\"fn\">0</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.hasIntegral_zero","kind":"theorem","line":291,"name":"BoxIntegral.hasIntegral_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L291-L292"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_const\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integrable_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) =&gt; <span class=\"fn\">c</span>)</span> <span class=\"fn\">vol</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_const","kind":"theorem","line":288,"name":"BoxIntegral.integrable_const","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L288-L289"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_const\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integral_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) =&gt; <span class=\"fn\">c</span>)</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">vol</span> <span class=\"fn\">I</span>)</span> <span class=\"fn\">c</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_const","kind":"theorem","line":284,"name":"BoxIntegral.integral_const","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L284-L286"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.hasIntegral_const\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">hasIntegral_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) =&gt; <span class=\"fn\">c</span>)</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">vol</span> <span class=\"fn\">I</span>)</span> <span class=\"fn\">c</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.hasIntegral_const","kind":"theorem","line":280,"name":"BoxIntegral.hasIntegral_const","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L280-L282"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_sub\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integral_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">g</span>) <span class=\"fn\">vol</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\">vol</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_sub","kind":"theorem","line":276,"name":"BoxIntegral.integral_sub","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L276-L278"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.sub\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">g</span>) <span class=\"fn\">vol</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.sub","kind":"theorem","line":272,"name":"BoxIntegral.Integrable.sub","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L272-L274"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.sub\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y </span><span class=\"fn\">y'</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h'</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\">vol</span> <span class=\"fn\">y'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">g</span>) <span class=\"fn\">vol</span> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">y'</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.sub","kind":"theorem","line":269,"name":"BoxIntegral.HasIntegral.sub","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L269-L270"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_neg\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integral_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span>) <span class=\"fn\">vol</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_neg","kind":"theorem","line":263,"name":"BoxIntegral.integral_neg","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L263-L267"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_neg\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integrable_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span>) <span class=\"fn\">vol</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_neg","kind":"theorem","line":259,"name":"BoxIntegral.integrable_neg","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L259-L261"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.of_neg\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">of_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span>) <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.of_neg","kind":"theorem","line":256,"name":"BoxIntegral.Integrable.of_neg","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L256-L257"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.neg\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span>) <span class=\"fn\">vol</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.neg","kind":"theorem","line":253,"name":"BoxIntegral.Integrable.neg","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L253-L254"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.neg\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span>) <span class=\"fn\">vol</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">y</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.neg","kind":"theorem","line":250,"name":"BoxIntegral.HasIntegral.neg","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L250-L251"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_add\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integral_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span>) <span class=\"fn\">vol</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\">vol</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_add","kind":"theorem","line":246,"name":"BoxIntegral.integral_add","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L246-L248"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.add\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span>) <span class=\"fn\">vol</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.add","kind":"theorem","line":242,"name":"BoxIntegral.Integrable.add","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L242-L244"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.add\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y </span><span class=\"fn\">y'</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h'</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\">vol</span> <span class=\"fn\">y'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span>) <span class=\"fn\">vol</span> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y'</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.add","kind":"theorem","line":238,"name":"BoxIntegral.HasIntegral.add","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L238-L240"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.integral_eq\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">integral_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.integral_eq","kind":"theorem","line":235,"name":"BoxIntegral.HasIntegral.integral_eq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L235-L236"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.integrable\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">integrable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.integrable","kind":"theorem","line":232,"name":"BoxIntegral.HasIntegral.integrable","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L232-L233"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.unique\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y </span><span class=\"fn\">y'</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h'</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y'</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.unique","kind":"theorem","line":229,"name":"BoxIntegral.HasIntegral.unique","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L229-L230"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.mono\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l'</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hle</span> : <span class=\"fn\">l'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">l</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l'</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.mono","kind":"theorem","line":226,"name":"BoxIntegral.Integrable.mono","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L226-L227"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.hasIntegral\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">hasIntegral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.hasIntegral","kind":"theorem","line":221,"name":"BoxIntegral.Integrable.hasIntegral","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L221-L224"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.mono\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l₁</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\">l₂</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">l₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l₂</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.mono","kind":"theorem","line":217,"name":"BoxIntegral.HasIntegral.mono","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L217-L219"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_iff_cauchy_basis\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integrable_iff_cauchy_basis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">ε</span> &gt; <span class=\"fn\">0</span>,\n    <span class=\"fn\">∃ (<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span></span></span></span>),\n      <span class=\"fn\">(∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.RCond\">RCond</a></span> <span class=\"fn\">(<span class=\"fn\">r</span> <span class=\"fn\">c</span>)</span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>         <span class=\"fn\">∀ (<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>) (<span class=\"fn\">π₁ </span><span class=\"fn\">π₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>),\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.MemBaseSet\">MemBaseSet</a></span> <span class=\"fn\">I</span> <span class=\"fn\">c₁</span> <span class=\"fn\">(<span class=\"fn\">r</span> <span class=\"fn\">c₁</span>)</span> <span class=\"fn\">π₁</span></span> →\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition\">IsPartition</a></span> →\n              <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.MemBaseSet\">MemBaseSet</a></span> <span class=\"fn\">I</span> <span class=\"fn\">c₂</span> <span class=\"fn\">(<span class=\"fn\">r</span> <span class=\"fn\">c₂</span>)</span> <span class=\"fn\">π₂</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition\">IsPartition</a></span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π₁</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π₂</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span></span></span></span></span></span></span></span></div></div>","info":{"doc":"In a complete space, a function is integrable if and only if its integral sums form a Cauchy\nnet. Here we restate this fact in terms of `∀ ε > 0, ∃ r, ...`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_iff_cauchy_basis","kind":"theorem","line":202,"name":"BoxIntegral.integrable_iff_cauchy_basis","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L202-L215"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_iff_cauchy\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integrable_iff_cauchy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">Filter.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.toFilteriUnion\">IntegrationParams.toFilteriUnion</a> <span class=\"fn\">I</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_iff_cauchy","kind":"theorem","line":198,"name":"BoxIntegral.integrable_iff_cauchy","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L198-L200"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.of_mul\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">of_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">ε</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>),\n    <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span> →\n      <span class=\"fn\">∃ (<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span></span></span></span>),\n        <span class=\"fn\">(∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.RCond\">RCond</a></span> <span class=\"fn\">(<span class=\"fn\">r</span> <span class=\"fn\">c</span>)</span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>           <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>) (<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>),\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.MemBaseSet\">MemBaseSet</a></span> <span class=\"fn\">I</span> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\">r</span> <span class=\"fn\">c</span>)</span> <span class=\"fn\">π</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition\">IsPartition</a></span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">ε</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"Quite often it is more natural to prove an estimate of the form `a * ε`, not `ε` in the RHS of\n`BoxIntegral.hasIntegral_iff`, so we provide this auxiliary lemma. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.of_mul","kind":"theorem","line":187,"name":"BoxIntegral.HasIntegral.of_mul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L187-L196"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.hasIntegral_iff\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">hasIntegral_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">ε</span> &gt; <span class=\"fn\">0</span>,\n    <span class=\"fn\">∃ (<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span></span></span></span>),\n      <span class=\"fn\">(∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.RCond\">RCond</a></span> <span class=\"fn\">(<span class=\"fn\">r</span> <span class=\"fn\">c</span>)</span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>         <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>) (<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>),\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.MemBaseSet\">MemBaseSet</a></span> <span class=\"fn\">I</span> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\">r</span> <span class=\"fn\">c</span>)</span> <span class=\"fn\">π</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition\">IsPartition</a></span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span></span></span></span></span></span></div></div>","info":{"doc":"The `ε`-`δ` definition of `BoxIntegral.HasIntegral`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.hasIntegral_iff","kind":"theorem","line":180,"name":"BoxIntegral.hasIntegral_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L180-L185"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.tendsto\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.toFilteriUnion\">IntegrationParams.toFilteriUnion</a> <span class=\"fn\">I</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">y</span>)</span></span></div></div>","info":{"doc":"Reinterpret `BoxIntegral.HasIntegral` as `Filter.Tendsto`, e.g., dot-notation theorems\nthat are shadowed in the `BoxIntegral.HasIntegral` namespace. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.tendsto","kind":"theorem","line":174,"name":"BoxIntegral.HasIntegral.tendsto","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L174-L178"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">F</span></div></div>","info":{"doc":"The integral of a function `f` over a box `I` along a filter `l` w.r.t. a volume `vol`.\nReturns zero on non-integrable functions. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral","kind":"def","line":164,"name":"BoxIntegral.integral","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L164-L167"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"A function is integrable if there exists a vector that satisfies the `HasIntegral`\npredicate. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable","kind":"def","line":158,"name":"BoxIntegral.Integrable","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L158-L161"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"The predicate `HasIntegral I l f vol y` says that `y` is the integral of `f` over `I` along `l`\nw.r.t. volume `vol`. This means that integral sums of `f` tend to `𝓝 y` along\n`BoxIntegral.IntegrationParams.toFilteriUnion I ⊤`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral","kind":"def","line":151,"name":"BoxIntegral.HasIntegral","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L151-L156"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_smul\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> (<span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span>) <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_smul","kind":"theorem","line":139,"name":"BoxIntegral.integralSum_smul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L139-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_neg\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span>) <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_neg","kind":"theorem","line":134,"name":"BoxIntegral.integralSum_neg","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L134-L137"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_add\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span>) <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">g</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_add","kind":"theorem","line":129,"name":"BoxIntegral.integralSum_add","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L129-L132"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_disjUnion\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum_disjUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π₁ </span><span class=\"fn\">π₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span> <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.iUnion\">iUnion</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.disjUnion\">disjUnion</a></span> <span class=\"fn\">π₂</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π₂</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_disjUnion","kind":"theorem","line":120,"name":"BoxIntegral.integralSum_disjUnion","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L120-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_sub_partitions\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum_sub_partitions</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π₁ </span><span class=\"fn\">π₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition\">IsPartition</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.IsPartition\">IsPartition</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π₁</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">∑ <span class=\"fn\">J</span> ∈ <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.toPrepartition\">toPrepartition</a></span> ⊓ <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.toPrepartition\">toPrepartition</a></span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.boxes\">boxes</a></span>,\n    (<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">vol</span> <span class=\"fn\">J</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.infPrepartition\">infPrepartition</a></span> <span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.toPrepartition\">toPrepartition</a></span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <span class=\"fn\">J</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>       <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">vol</span> <span class=\"fn\">J</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π₂</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.infPrepartition\">infPrepartition</a></span> <span class=\"fn\"><span class=\"fn\">π₁</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.toPrepartition\">toPrepartition</a></span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.tag\">tag</a></span> <span class=\"fn\">J</span>)</span>)</span></span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_sub_partitions","kind":"theorem","line":110,"name":"BoxIntegral.integralSum_sub_partitions","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L110-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_fiberwise\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum_fiberwise</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">y</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.image\">Finset.image</a> <span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.boxes\">boxes</a></span></span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.filter\">filter</a></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_fiberwise","kind":"theorem","line":105,"name":"BoxIntegral.integralSum_fiberwise","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L105-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_inf_partition\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum_inf_partition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π'</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">π'</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.IsPartition\">IsPartition</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.infPrepartition\">infPrepartition</a></span> <span class=\"fn\">π'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_inf_partition","kind":"theorem","line":99,"name":"BoxIntegral.integralSum_inf_partition","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L99-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_biUnion_partition\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum_biUnion_partition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">πi</span> : <span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">J</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hπi</span> : <span class=\"fn\">∀ <span class=\"fn\">J</span> ∈ <span class=\"fn\">π</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">πi</span> <span class=\"fn\">J</span>)</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.IsPartition\">IsPartition</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition.biUnionPrepartition\">biUnionPrepartition</a></span> <span class=\"fn\">πi</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_biUnion_partition","kind":"theorem","line":87,"name":"BoxIntegral.integralSum_biUnion_partition","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L87-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_biUnionTagged\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum_biUnionTagged</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">Prepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">πi</span> : <span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">J</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.Prepartition.biUnionTagged\">biUnionTagged</a></span> <span class=\"fn\">πi</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">J</span> ∈ <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.boxes\">boxes</a></span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\">πi</span> <span class=\"fn\">J</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_biUnionTagged","kind":"theorem","line":81,"name":"BoxIntegral.integralSum_biUnionTagged","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L81-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vol</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxAdditiveMap</a> <span class=\"fn\">ι</span> (<span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">F</span></div></div>","info":{"doc":"The integral sum of `f : ℝⁿ → E` over a tagged prepartition `π` w.r.t. box-additive volume `vol`\nwith codomain `E →L[ℝ] F` is the sum of `vol J (f (π.tag J))` over all boxes of `π`. ","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum","kind":"def","line":76,"name":"BoxIntegral.integralSum","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/6576717c16350fe6cbbe6cecfa2b1abe6b05a36a/Mathlib/Analysis/BoxIntegral/Basic.lean#L76-L79"}}],"imports":["Init","Mathlib.Analysis.BoxIntegral.Partition.Filter","Mathlib.Analysis.BoxIntegral.Partition.Measure","Mathlib.Analysis.Oscillation","Mathlib.Data.Bool.Basic","Mathlib.MeasureTheory.Measure.Real","Mathlib.Topology.UniformSpace.Compact"],"instances":[],"name":"Mathlib.Analysis.BoxIntegral.Basic"}